{"version":3,"sources":["components/Task5/UsersPages/Home.module.css","components/Task5/NavBar.tsx","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","common/Input/Input.tsx","common/Button/Button.tsx","components/NamesNumber/NamesNumber.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/Todo/AddTaskInput/AddTaskInput.tsx","components/Todo/EditableSpan/EditableSpan.tsx","components/Todo/Todo.tsx","components/Todo/AddItemForm/AddItemForm.tsx","themes/themes.ts","components/Task5/UsersPages/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","components/Task6/PresCompForEditableSpan.tsx","components/task 8/homeWorkReducer.ts","LocalStorageFunctions/LocalStorageFunctions.ts","common/Select/Select.tsx","common/Radio/Radio.tsx","components/task 8/People.tsx","components/Task9/Time.tsx","reducers/loading-reducer.ts","common/Preloader/Preloader.tsx","common/Range/Range.tsx","components/Task5/UsersPages/Junior.tsx","api/requestsAPI.ts","components/Task13-Request/Request.tsx","components/Task5/UsersPages/JuniorPlus.tsx","reducers/theme-reducer.ts","components/Task5/UsersPages/Home.tsx","App.tsx","serviceWorker.ts","store/store.ts","index.tsx","components/Task5/NavBar.module.css","components/Todo/Todo.module.css","components/Dialogs/Message/Message.module.css","common/Select/Select.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Task9/Time.module.css","components/Task5/UsersPages/JuniorPlus.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Todo/AddItemForm/AddItemForm.module.css","components/Task5/UsersPages/Junior.module.css","components/Task6/PresCompForEditableSpan.module.css","common/EditableSpan/EditableSpan.module.css","common/Radio/Radio.module.css","components/task 8/People.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css","common/Preloader/Preloader.module.css","common/Range/Range.module.css"],"names":["module","exports","NavBar","useState","showMenu","setShowMenu","className","classes","navWrapper","onClick","menu","spanMenu","spanMenuFocus","navList","showNav","exact","to","navLink","activeClassName","active","Avatar","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","React","memo","console","log","dialogs","dialogsData","Input","wrapper","correctField","input","error","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","onBlur","onBlurHandler","value","valueInp","placeholder","placeholderDefault","autoFocus","type","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","title","NamesNumber","names","namesData","length","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","setBlurFocus","e","currentTarget","charCode","trim","alert","AddTaskInput","setValue","setError","showDisplay","display","inputWrapper","style","addNewTask","setActive","TaskAdd","close","EditableSpan","editMode","setEditMode","inputValue","setInputValue","correctValue","setCorrectValue","TextField","getNewInputValue","helperText","label","onDoubleClick","itemValue","Todo","elementItem","tasks","map","t","key","id","isDone","item","completedTask","changeStatus","checked","color","changeItemTask","IconButton","deleteTask","aria-label","Delete","todo","titleValue","changeTodoListTitle","removeTodoList","listItem","btns","btnsBases","variant","filterTask","changeTasks","btnsImportance","width","AddItemForm","Paper","itemForm","addItem","PlaylistAdd","lightTheme","background","darkTheme","greenTheme","ThemeContext","createContext","PreJunior","theme","useContext","todoList","todoLists","tl","newFilteredTasks","filter","importance","Grid","container","addNewTodoList","addTodoList","spacing","editSpanWrapper","span","onClickHandler","ActionType","PresCompForEditableSpan","btnHandler","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Select","collapsed","setCollapsed","hoveredElement","setHoveredElement","selectedItem","items","find","i","hoveredItem","useEffect","country","c","onMouseDown","onMouseEnter","tabIndex","onKeyDown","keyCode","pretendentElement","Radio","radioWrapper","onChangeRadio","htmlFor","homeWorkReducer","action","SORT","payload","sort","a","b","CHECK","p","age","sortPeopleAC","People","useReducer","dispatch","person","Time","timerId","setTimerId","moment","format","data","setData","dateWrapper","Tooltip","placement","arrow","clearInterval","timer_id","window","setInterval","initialState","loading","setLoading","Preloader","preloaderWrapper","CircularProgress","Range","range","min","minValue","max","maxValue","step","Junior","countries","useMemo","useCallback","selectValue","contactMethods","setContactMethods","copyContactMethods","r","contactMethod","useDispatch","useSelector","getLoading","setTimeout","rangeValue","setRangeValue","onRangeChange","requestsAPI","CheckboxValue","axios","post","success","Request","setCheckBox","setState","getCheckBoxValue","changeCheckboxValue","then","res","catch","JuniorPlus","themes","webSiteTheme","setWebSiteTheme","juniorPlus","juniorPlusContent","Home","home","App","reference1","v1","reference2","setTodoLists","setTasks","newTaskValue","todoListId","idValue","task","TaskValue","filterTodoLists","td","valueNewFilter","setNamesData","showMessage","newName","Provider","path","render","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8854e6c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1OTsu\"};","import React, {useState} from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst [showMenu, setShowMenu] = useState(false)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetShowMenu(!showMenu)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.navWrapper}>\r\n\t\t\t<div onClick={onClickHandler} className={classes.menu}>\r\n\t\t\t\t{showMenu ? <span className={`${classes.spanMenu} ${classes.spanMenuFocus}`}>Hide Menu</span>  : <span className={classes.spanMenu}>Show menu</span> }\r\n\t\t\t</div>\r\n\t\t\t<ul className={showMenu ? `${classes.navList} ${classes.showNav}` : classes.navList}>\r\n\t\t\t\t<NavLink exact to={'/'} className={classes.navLink} activeClassName={classes.active}>Home</NavLink>\r\n\t\t\t\t<NavLink to={'/preJunior'} className={classes.navLink} activeClassName={classes.active}>preJunior</NavLink>\r\n\t\t\t\t<NavLink to={'/junior'} className={classes.navLink} activeClassName={classes.active}>Junior</NavLink>\r\n\t\t\t\t<NavLink to={'/juniorPlus'} className={classes.navLink} activeClassName={classes.active}>Junior+</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = React.memo(function (props: propsType){\r\n\tconsole.log('dialogs')\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tvalueInp: string\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tplaceholderDefault?: string\r\n\tonBlurHandler?: ()=>void\r\n\tautoFocus?:boolean\r\n}\r\n\r\nexport const Input = React.memo(function (props: PropsType){\r\n\tconsole.log('input')\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t onBlur={props.onBlurHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t autoFocus={props.autoFocus}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n})","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = React.memo(function (props: PropsType){\r\n\tconsole.log('button')\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n})","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = React.memo(function (props: PropsType){\r\n\tconsole.log('names number')\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = React.memo((props: PropsType) => {\r\n\tconsole.log('checkbox')\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\tlet [blurFocus, setBlurFocus] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetBlurFocus(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t onBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"../Todo.module.css\";\r\n\r\ntype PropsType = {\r\n\taddNewTask: (inputValue: string)=>void\r\n\tactive: boolean\r\n\tsetActive: (boolean: boolean)=>void\r\n}\r\n\r\nexport const AddTaskInput = React.memo(function (props: PropsType){\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\tconst showDisplay = {display: props.active ? 'block' : 'none'};\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet hideAddBlock = () => {\r\n\t\tprops.setActive(false);\r\n\t\tsetError(null)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={classes.inputWrapper}>\r\n\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t<input  className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}/>\r\n\r\n\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\r\n\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n\titemValue: string\r\n\tgetNewInputValue: (inputValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: PropsType){\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [correctValue, setCorrectValue] = useState(true);\r\n\r\n\tconst onDoubleClickHandler = () => {\r\n\t\tsetEditMode(true);\r\n\t\tsetInputValue(props.itemValue)\r\n\t}\r\n\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.currentTarget.value)\r\n\t\tsetCorrectValue(true)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tif (inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst error = {\r\n\t\tbackgroundColor: 'red',\r\n\t}\r\n\r\n\treturn (\r\n\t\teditMode ? <TextField error={!correctValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={correctValue ? '' : 'Task name is missing'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={'edit task'}/>\r\n\t\t\t: <span onDoubleClick={onDoubleClickHandler}>{props.itemValue}</span>\r\n\t)\r\n})","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\nimport {AddTaskInput} from \"./AddTaskInput/AddTaskInput\";\r\nimport {EditableSpan} from \"./EditableSpan/EditableSpan\";\r\nimport {Button, Checkbox} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n\tchangeItemTask: (idValue: string, taskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string,) => void\r\n}\r\n\r\n\r\nconst Todo = React.memo(function (props: PropsType){\r\n\tconsole.log('TODO')\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst showAddBlock = () => setActive(!active);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\tlet getNewInputValue = (inputValue: string) => {\r\n\t\t\t\tprops.changeItemTask(t.id, inputValue, props.id)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<Checkbox  onChange={onChangeStatusHandler} checked={t.isDone} color={\"primary\"}/>\r\n\t\t\t\t\t<EditableSpan itemValue={t.item} getNewInputValue={getNewInputValue}/>\r\n\t\t\t\t\t<IconButton onClick={onClickDeleteHandler} aria-label=\"delete\">\r\n\t\t\t\t\t\t<Delete />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\tlet addNewTask = (title: string) => {\r\n\t\tprops.addNewTask(title, props.id)\r\n\t}\r\n\tlet getNewTitleValue = (titleValue: string) => {\r\n\t\tprops.changeTodoListTitle(props.id, titleValue)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>\r\n\t\t\t\t<EditableSpan itemValue={props.title} getNewInputValue={getNewTitleValue}/>\r\n\t\t\t\t<IconButton onClick={removeTodoListHandler} aria-label=\"delete\">\r\n\t\t\t\t\t<Delete />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<div className={classes.btnsBases}>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'all' ? 'contained' : 'text'} color={\"primary\"} onClick={showAllTasks}>All</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'active' ? 'contained' : 'text'} color={'primary'} onClick={showActiveTasks}>Active</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'completed' ? 'contained' : 'text'} color={\"primary\"} onClick={showCompletedTasks}>Completed</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.btnsImportance}>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'height' ? 'contained' : 'text'} color={\"primary\"} onClick={showImportanceTasks}>Important</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'medium' ? 'contained' : 'text'} color={\"primary\"} onClick={showMediumTasks}>Medium</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'low' ? 'contained' : 'text'} color={\"primary\"} onClick={showLowTasks}>Low</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Button style={{width: '100%'}}  className={active ? classes.active : ''} color={\"secondary\"} onClick={showAddBlock}>Add Task</Button>\r\n\t\t\t</div>\r\n\t\t\t<AddTaskInput addNewTask={addNewTask}\r\n\t\t\t\t\t\t\t\t\t\tactive={active}\r\n\t\t\t\t\t\t\t\t\t\tsetActive={setActive}/>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./AddItemForm.module.css\";\r\nimport {Paper, TextField} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {PlaylistAdd} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\taddItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function (props: PropsType){\r\n\tconsole.log('itemForm')\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<div className={classes.itemForm}>\r\n\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t<TextField error={!!error}\r\n\t\t\t\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t\t label={'Add new TodoList'}\r\n\t\t\t\t\t\t\t\t\t\t helperText={!!error ? \"Incorrect entry.\" : ''}/>\r\n\t\t\t\t\t<IconButton onClick={addTaskHandler} color={\"primary\"}>\r\n\t\t\t\t\t\t<PlaylistAdd/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t)\r\n})","import React from \"react\";\r\n\r\nexport type ThemeType = {\r\n\tbackground: string,\r\n\tcolor: string\r\n}\r\n\r\nexport const lightTheme = {\r\n\tbackground: 'white',\r\n\tcolor: 'black'\r\n}\r\nexport const darkTheme = {\r\n\tbackground: 'black',\r\n\tcolor: 'white'\r\n\r\n}\r\nexport const greenTheme = {\r\n\tbackground: 'green',\r\n\tcolor: 'blue'\r\n}\r\n\r\nexport const ThemeContext = React.createContext<ThemeType>(lightTheme)","import React, {ChangeEvent, KeyboardEvent, useContext} from \"react\";\r\nimport classes from \"./PreJunior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {dialogsDataType, FilterTaskType, NamesData, TaskStateType, TodoListType} from \"../../../App\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\nimport {Input} from \"../../../common/Input/Input\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {NamesNumber} from \"../../NamesNumber/NamesNumber\";\r\nimport {PresentationComponent} from \"../../PresentationComponent/PresentationComponent\";\r\nimport Todo from \"../../Todo/Todo\";\r\nimport {AddItemForm} from \"../../Todo/AddItemForm/AddItemForm\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {ThemeContext} from \"../../../themes/themes\";\r\n\r\ntype PropsType = {\r\n\tdialogsData: Array<dialogsDataType>\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n\tonClickBtnHandler: () => void\r\n\tnamesData: Array<NamesData>\r\n\ttasks: TaskStateType\r\n\ttodoLists: Array<TodoListType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tremoveTodoList: (todoListId: string) => void\r\n\taddTodoList: (title: string) => void\r\n\tchangeItemTask: (idValue: string, TaskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string) => void\r\n}\r\n\r\nexport const PreJunior = React.memo(function PreJunior(props: PropsType) {\r\n\r\n\tconst theme = useContext(ThemeContext)\r\n\r\n\tlet todoList = props.todoLists.map(tl => {\r\n\r\n\t\tlet newFilteredTasks = props.tasks[tl.id]\r\n\t\tswitch (tl.filterTask) {\r\n\t\t\tcase 'active':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'completed':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'height':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'medium':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'low':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item key={tl.id}>\r\n\t\t\t\t<Paper>\r\n\t\t\t\t\t<Todo id={tl.id}\r\n\t\t\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\t\t\ttasks={newFilteredTasks}\r\n\t\t\t\t\t\t\t\tchangeTasks={props.changeTasks}\r\n\t\t\t\t\t\t\t\taddNewTask={props.addNewTask}\r\n\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\t\t\t\t\tchangeStatus={props.changeStatus}\r\n\t\t\t\t\t\t\t\tfilterTask={tl.filterTask}\r\n\t\t\t\t\t\t\t\tremoveTodoList={props.removeTodoList}\r\n\t\t\t\t\t\t\t\tchangeItemTask={props.changeItemTask} changeTodoListTitle={props.changeTodoListTitle}/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper} style={theme}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Dialogs dialogsData={props.dialogsData}/>\r\n\r\n\t\t\t<div className={'todoListWrapper'}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<div className={classes.addNewTodoList}>\r\n\t\t\t\t\t\t<AddItemForm addItem={props.addTodoList}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t{todoList}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<div className={'inputWrapper'}>\r\n\t\t\t\t<Input valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\r\n\t\t\t\t<Button onClickBtnHandler={props.onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SAY HELLO'}\r\n\t\t\t\t\t\t\t\ttypeOfButton={'red'}/>\r\n\t\t\t</div>\r\n\t\t\t<NamesNumber namesData={props.namesData}/>\r\n\t\t\t<PresentationComponent/>\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./EditableSpan.module.css\";\r\nimport {Input} from \"../Input/Input\";\r\n\r\n\r\ntype PropsType = {\r\n\teditMode: boolean\r\n\tvalueInp: string\r\n\tonBlurHandler: ()=>void\r\n\tonClickHandler:()=>void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>)=>void\r\n}\r\n\r\nexport const EditableSpan = React.memo((props: PropsType) => {\r\n\tconsole.log('editableSpan')\r\n\treturn (\r\n\t\t<div className={classes.editSpanWrapper}>\r\n\t\t\t{\r\n\t\t\t\tprops.editMode ?\r\n\t\t\t\t\t<Input onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t\t valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t\t onBlurHandler={props.onBlurHandler}\r\n\t\t\t\t\t\t\t\t autoFocus={true}\r\n\t\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t\t placeholderDefault={'Write your status'}\r\n\t\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}/> :\r\n\t\t\t\t\t<span className={classes.span}\r\n\t\t\t\t\t\t\t\tonClick={props.onClickHandler}>{props.valueInp !== '' ? props.valueInp : \"You don't have any status\"}</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./PresCompForEditableSpan.module.css\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {restoreState, saveState} from \"../../LocalStorageFunctions/LocalStorageFunctions\";\r\n\r\n\r\nexport const PresCompForEditableSpan = React.memo(() => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [valueInp, setValueInp] = useState('');\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onClickHandler = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\tsetValueInp(valueInp)\r\n\t\t\tsetEditMode(false)\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\tlet saveStateFunction = () => {\r\n\t\tsaveState('data', valueInp);\r\n\t}\r\n\tlet restoreStateFunction = () => {\r\n\t\tsetValueInp(restoreState('data', ''));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<EditableSpan editMode={editMode}\r\n\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\r\n\t\t\t\t\t\t\t\t\t\tonBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\tonClickHandler={onClickHandler}\r\n\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\r\n\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}/>\r\n\t\t\t<div className={classes.btnHandler}>\r\n\t\t\t\t<Button onClickBtnHandler={saveStateFunction} title={'Save state'}/>\r\n\t\t\t\t<Button onClickBtnHandler={restoreStateFunction} title={'Restore state'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})","enum ActionType {\r\n\tSORT = 'SORT',\r\n\tCHECK = 'CHECK'\r\n}\r\n\r\ntype StateType = {\r\n\tid: string\r\n\tname: string\r\n\tage: number\r\n}\r\ntype ActionsType = SortPeopleUpType | GetAdultPeopleType\r\ntype SortPeopleUpType = {\r\n\ttype: typeof ActionType.SORT\r\n\tpayload: 'up' | 'down'\r\n}\r\ntype GetAdultPeopleType = {\r\n\ttype: typeof ActionType.CHECK\r\n\tpayload: 18\r\n}\r\n\r\nexport const homeWorkReducer = (state: Array<StateType>, action: ActionsType): Array<StateType> => {\r\n\tswitch (action.type) {\r\n\t\tcase ActionType.SORT: {\r\n\t\t\tif (action.payload === 'up') {\r\n\t\t\t\treturn [...state.sort((a, b): number => {\r\n\t\t\t\t\tif (a.name > b.name) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.name < b.name) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t})]\r\n\t\t\t}\r\n\t\t\tif (action.payload === 'down') {\r\n\t\t\t\treturn [...state.sort((a, b): number => {\r\n\t\t\t\t\tif (a.name < b.name) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.name > b.name) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t})]\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase ActionType.CHECK: {\r\n\t\t\treturn [...state.filter(p => p.age >= 18)]\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n\treturn []\r\n}\r\n\r\nexport const sortPeopleAC = (payload: 'up' | 'down'): SortPeopleUpType => {\r\n\treturn {type: ActionType.SORT, payload}\r\n}\r\nexport const getAdultPeopleAC = (payload: 18): GetAdultPeopleType => {\r\n\treturn {type: ActionType.CHECK, payload}\r\n}","export function saveState<T>(key: string, state: T) {\r\n\tconst stateAsString = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\tconst stateAsString = localStorage.getItem(key);\r\n\tif (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n\treturn defaultState;\r\n}","import React, {useState, KeyboardEvent, useEffect} from \"react\";\r\nimport classes from \"./Select.module.css\";\r\nimport {ItemsType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\tvalue: string\r\n\titems: Array<ItemsType>\r\n\tonChange: (selectValue: string) => void\r\n}\r\n\r\nexport const Select = React.memo(function (props: PropsType){\r\n\r\n\tconsole.log('select')\r\n\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\tconst [hoveredElement, setHoveredElement] = useState(props.value);\r\n\r\n\tconst selectedItem = props.items.find(i => i.value === props.value)\r\n\tconst hoveredItem = props.items.find(i => i.value === hoveredElement)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetCollapsed(!collapsed)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tsetCollapsed(true)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHoveredElement(props.value)\r\n\t}, [props.value]);\r\n\tconst onKeyDownHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n\t\tconsole.log(e.keyCode)\r\n\t\tif (e.keyCode === 40 || e.keyCode === 38) {\r\n\t\t\tfor (let i = 0; i < props.items.length; i++) {\r\n\t\t\t\tif (props.items[i].value === hoveredElement) {\r\n\t\t\t\t\tconst pretendentElement = e.keyCode === 40 ? props.items[i + 1] : props.items[i - 1];\r\n\t\t\t\t\tif (pretendentElement) {\r\n\t\t\t\t\t\tprops.onChange(pretendentElement.value);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!selectedItem) {\r\n\t\t\t\tprops.onChange(props.items[0].value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e.keyCode === 13 || e.keyCode === 27) {\r\n\t\t\tsetCollapsed(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst country = props.items.map(c => {\r\n\r\n\t\tconst onMouseDownHandler = () => {\r\n\t\t\tprops.onChange(c.value)\r\n\t\t}\r\n\t\tconst onMouseEnterHandler = () => {\r\n\t\t\tsetHoveredElement(c.value)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={(hoveredItem === c) ? `${classes.country} ${classes.active}` : classes.country}\r\n\t\t\t\t\t key={c.value}\r\n\t\t\t\t\t onMouseDown={onMouseDownHandler}\r\n\t\t\t\t\t onMouseEnter={onMouseEnterHandler}>{c.item}\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.wrapper} tabIndex={0} onKeyDown={onKeyDownHandler}>\r\n\t\t\t<h3 className={classes.active}\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\tonClick={onClickHandler}\r\n\t\t\t\t\tonBlur={onBlurHandler}>{selectedItem && selectedItem.item}</h3>\r\n\t\t\t{\r\n\t\t\t\t!collapsed &&\r\n        <div>\r\n\t\t\t\t\t{country}\r\n        </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Radio.module.css\";\r\nimport {ContactMethodType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\titems: Array<ContactMethodType>\r\n\tonChangeRadio: (id: string, checked: boolean) => void\r\n}\r\n\r\nexport const Radio = React.memo(function (props: PropsType){\r\n\tconsole.log('radio')\r\n\treturn (\r\n\t\t<div className={classes.radioWrapper}>\r\n\t\t\t{props.items.map(i => {\r\n\r\n\t\t\t\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tprops.onChangeRadio(i.id, e.currentTarget.checked)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={i.id} className={classes.inputWrapper}>\r\n\t\t\t\t\t\t<input key={i.id}\r\n\t\t\t\t\t\t\t\t\t id = {i.id}\r\n\t\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t type=\"radio\"\r\n\t\t\t\t\t\t\t\t\t name={i.name}\r\n\t\t\t\t\t\t\t\t\t value={i.value}\r\n\t\t\t\t\t\t\t\t\t checked={i.checked}/>\r\n\t\t\t\t\t\t<label htmlFor={i.id}>{i.value}</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n})","import React, {useReducer} from \"react\";\r\nimport classes from \"./People.module.css\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {getAdultPeopleAC, homeWorkReducer, sortPeopleAC} from \"./homeWorkReducer\";\r\n\r\nexport const People = () => {\r\n\r\n\tconst people = [\r\n\t\t{id: '1', name: 'Denis', age: 27},\r\n\t\t{id: '2', name: 'Andrey', age: 30},\r\n\t\t{id: '3', name: 'Ivan', age: 13},\r\n\t\t{id: '4', name: 'Misha', age: 9},\r\n\t\t{id: '5', name: 'Katya', age: 17},\r\n\t\t{id: '6', name: 'Sasha', age: 18},\r\n\t]\r\n\r\n\tconst [state, dispatch] = useReducer(homeWorkReducer, people)\r\n\r\n\tconst person = state.map(p => {\r\n\t\treturn (\r\n\t\t\t<div key={p.id}>{p.name} {p.age}</div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst sortPeopleUpHandler = () => {\r\n\t\tdispatch(sortPeopleAC('up'))\r\n\t}\r\n\tconst sortPeopleDownHandler = () => {\r\n\t\tdispatch(sortPeopleAC('down'))\r\n\t}\r\n\tconst getAdultPeopleHandler = () => {\r\n\t\tdispatch(getAdultPeopleAC(18))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div>\r\n\t\t\t\t{person}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<Button title={'Sort up'} onClickBtnHandler={sortPeopleUpHandler}/>\r\n\t\t\t\t<Button title={'Sort down'} onClickBtnHandler={sortPeopleDownHandler}/>\r\n\t\t\t\t<Button title={'Adult people'} onClickBtnHandler={getAdultPeopleHandler}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./Time.module.css\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport moment from \"moment\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\n\r\nexport const Time = () => {\r\n\r\n\tconst [timerId, setTimerId] = useState<number>(0)\r\n\tconst [data, setData] = useState<string>(moment().format('HH:mm:ss'))\r\n\r\n\tconst onClickStartHandler = () => {\r\n\t\tclearInterval(timerId)\r\n\t\tconst timer_id = window.setInterval(() => setData(moment().format('HH:mm:ss')), 1000);\r\n\t\tsetTimerId(timer_id)\r\n\t}\r\n\r\n\tconst onClickStopHandler = () => {\r\n\t\tclearInterval(timerId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.dateWrapper}>\r\n\t\t\t<Tooltip title={moment().format('MMMM Do YYYY')} placement=\"top-end\" arrow={true}>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t{data}\r\n\t\t\t\t</div>\r\n\t\t\t</Tooltip>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<Button title={'Start update time'} onClickBtnHandler={onClickStartHandler}/>\r\n\t\t\t\t<Button title={'Stop update time'} onClickBtnHandler={onClickStopHandler}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","const SET_LOADING = 'SET_LOADING'\r\n\r\nexport type StateType = {\r\n\tloading: boolean\r\n}\r\ntype ActionsType = SetLoadingType\r\nexport type SetLoadingType = {\r\n\ttype: typeof SET_LOADING\r\n\tloading: boolean\r\n}\r\n\r\nconst initialState = {\r\n\tloading: false\r\n}\r\n\r\n\r\nexport const loadingReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: action.loading\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport const setLoading = (loading: boolean): SetLoadingType => {\r\n\treturn {type: SET_LOADING, loading}\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Preloader.module.css\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport const Preloader = React.memo(() => {\r\n\tconsole.log('preloader')\r\n\treturn(\r\n\t\t<div className={classes.preloaderWrapper}>\r\n\t\t\t<CircularProgress />\r\n\t\t</div>\r\n\t)\r\n})\r\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Range.module.css\";\r\n\r\ntype PropsType = {\r\n\tminValue: string\r\n\tmaxValue: string\r\n\tvalue: string\r\n\tstep: string\r\n\tonChange: (value: string) => void\r\n}\r\n\r\nexport const Range = React.memo((props: PropsType) => {\r\n\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.onChange(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.range}>\r\n\t\t\t<input onChange={onChangeHandler}\r\n\t\t\t\t\t\t type=\"range\"\r\n\t\t\t\t\t\t id={'volume'}\r\n\t\t\t\t\t\t name={'volume'}\r\n\t\t\t\t\t\t min={props.minValue}\r\n\t\t\t\t\t\t max={props.maxValue}\r\n\t\t\t\t\t\t value={props.value}\r\n\t\t\t\t\t\t step={props.step}/>\r\n\t\t\t<label htmlFor=\"volume\">Volume:{props.value}%</label>\r\n\t\t</div>\r\n\t)\r\n})","import React, {useCallback, useContext, useMemo, useState} from \"react\";\r\nimport classes from \"./Junior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {PresCompForEditableSpan} from \"../../Task6/PresCompForEditableSpan\";\r\nimport {Select} from \"../../../common/Select/Select\";\r\nimport {Radio} from \"../../../common/Radio/Radio\";\r\nimport {People} from \"../../task 8/People\";\r\nimport {Time} from \"../../Task9/Time\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLoading} from \"../../../reducers/loading-reducer\";\r\nimport {AppRootState} from \"../../../store/store\";\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {Range} from \"../../../common/Range/Range\";\r\nimport {ThemeContext} from \"../../../themes/themes\";\r\n\r\nexport type ItemsType = {\r\n\tvalue: string\r\n\titem: string\r\n}\r\nexport type ContactMethodType = {\r\n\tid: string\r\n\tname: string\r\n\tvalue: string\r\n\tchecked: boolean\r\n}\r\n\r\nexport const Junior = () => {\r\n\r\n\tconst theme = useContext(ThemeContext)\r\n\r\n\tconst countries: Array<ItemsType> = useMemo(()=>{\r\n\t\treturn (\r\n\t\t\t[\r\n\t\t\t\t{value: '1', item: 'Belarus'},\r\n\t\t\t\t{value: '2', item: 'Russia'},\r\n\t\t\t\t{value: '3', item: 'Ukraine'},\r\n\t\t\t\t{value: '4', item: 'Italy'},\r\n\t\t\t]\r\n\t\t)\r\n\t},[])\r\n\r\n\tconst [value, setValue] = useState<string>(countries[0].value);\r\n\r\n\tconst onChange = useCallback((selectValue: string) => {\r\n\t\tsetValue(selectValue);\r\n\t}, [value])\r\n\r\n/////////////////// RADIO ///////////////////////////////\r\n\r\n\tconst [contactMethods, setContactMethods] = useState<Array<ContactMethodType>>([\r\n\t\t{id: '1', name: 'contact', value: 'Phone', checked: false},\r\n\t\t{id: '2', name: 'contact', value: 'Mobile phone', checked: false},\r\n\t\t{id: '3', name: 'contact', value: 'Email', checked: true},\r\n\t\t{id: '4', name: 'contact', value: 'Fax', checked: false},\r\n\t])\r\n\r\n\tconst onChangeRadio = useCallback((id: string, checked: boolean) => {\r\n\t\tconst copyContactMethods = contactMethods.map(r => {\r\n\t\t\tif (r.checked) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...r,\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t})\r\n\r\n\t\tconst contactMethod = copyContactMethods.find(r => r.id === id)\r\n\t\tif (contactMethod) {\r\n\t\t\tcontactMethod.checked = checked\r\n\t\t\tsetContactMethods([...copyContactMethods])\r\n\t\t}\r\n\t}, [contactMethods])\r\n\r\n\t//////////////////// TASK 10 ////////////////\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst loading = useSelector<AppRootState, boolean>(state => state.loading.loading)\r\n\r\n\tconst getLoading = useCallback(() => {\r\n\t\tdispatch(setLoading(true))\r\n\t\tsetTimeout(() => dispatch(setLoading(false)), 3000)\r\n\t}, [dispatch])\r\n\r\n\t/////////////////// TASK 11 /////////////////\r\n\r\n\tconst [rangeValue, setRangeValue] = useState('50')\r\n\r\n\tconst onRangeChange = useCallback((value: string) => {\r\n\t\tsetRangeValue(value)\r\n\t}, [rangeValue])\r\n\r\n\treturn (\r\n\t\t<div style={theme}>\r\n\t\t\t{!loading ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t\t\t\t<PresCompForEditableSpan/>\r\n\t\t\t\t\t<Select value={value} items={countries} onChange={onChange}/>\r\n\t\t\t\t\t<Radio items={contactMethods} onChangeRadio={onChangeRadio}/>\r\n\t\t\t\t\t<People/>\r\n\t\t\t\t\t<Time/>\r\n\t\t\t\t\t<div className={classes.btn}>\r\n\t\t\t\t\t\t<Button onClickBtnHandler={getLoading} title={'loading'}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.range}>\r\n\t\t\t\t\t\t<Range minValue={'0'} maxValue={'100'} value={rangeValue} step={'10'} onChange={onRangeChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<Preloader/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import axios from \"axios\";\r\n\r\nexport type ResponseTypeData = {\r\n\terrorText: string\r\n\tinfo: string\r\n\tyourBody: { success: boolean }\r\n\tyourQuery: {}\r\n}\r\n\r\nexport const requestsAPI = {\r\n\tcreateRequestAPI(CheckboxValue: boolean) {\r\n\t\treturn axios.post<ResponseTypeData>('https://neko-cafe-back.herokuapp.com/auth/test',{success: CheckboxValue})\r\n\t}\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {requestsAPI, ResponseTypeData} from \"../../api/requestsAPI\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\nexport const Request = React.memo(() =>  {\r\n\r\n\tconst [checkbox, setCheckBox] = useState<boolean>(false)\r\n\tconst [state, setState] = useState<ResponseTypeData  | string>('do request for the Server')\r\n\r\n\tconst getCheckBoxValue = useCallback(() => {\r\n\t\tsetCheckBox(!checkbox)\r\n\t},[checkbox])\r\n\r\n\tconst changeCheckboxValue = useCallback(() => {\r\n\t\trequestsAPI.createRequestAPI(checkbox)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetState(res.data)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetState(error)\r\n\t\t\t})\r\n\t},[checkbox])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button title={'Request'} onClickBtnHandler={changeCheckboxValue}/>\r\n\t\t\t<Checkbox checkbox={checkbox} onClickCheckbox={getCheckBoxValue}/>\r\n\t\t\t{JSON.stringify(state)}\r\n\t\t</div>\r\n\t)\r\n})","import React, {useCallback, useContext, useEffect, useMemo, useState} from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport classes from \"./JuniorPlus.module.css\";\r\nimport {Select} from \"../../../common/Select/Select\";\r\nimport {ItemsType} from \"./Junior\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setThemeAC} from \"../../../reducers/theme-reducer\";\r\nimport {ThemeContext} from \"../../../themes/themes\";\r\nimport {Request} from \"../../Task13-Request/Request\";\r\n\r\nexport const JuniorPlus = () => {\r\n\r\n\tconst theme = useContext(ThemeContext)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst themes: Array<ItemsType> = useMemo(() => {\r\n\t\treturn (\r\n\t\t\t[\r\n\t\t\t\t{value: '1', item: 'light'},\r\n\t\t\t\t{value: '2', item: 'black'},\r\n\t\t\t\t{value: '3', item: 'green'}\r\n\t\t\t]\r\n\t\t)\r\n\t}, [])\r\n\r\n\tconst [webSiteTheme, setWebSiteTheme] = useState<string>(themes[0].value);\r\n\tconst onChange = useCallback((selectValue: string): void => {\r\n\t\tsetWebSiteTheme(selectValue)\r\n\t}, [webSiteTheme])\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(setThemeAC(webSiteTheme))\r\n\t}, [webSiteTheme])\r\n\r\n\treturn (\r\n\t\t<div className={classes.juniorPlus} style={theme}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t<div className={classes.juniorPlusContent}>\r\n\t\t\t\t\t<Select value={webSiteTheme} items={themes} onChange={onChange}/>\r\n\t\t\t\t\t<Request/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import {darkTheme, greenTheme, lightTheme, ThemeType} from \"../themes/themes\";\r\n\r\ntype SetThemeType = {\r\n\ttype: typeof SET_THEME\r\n\tvalue: string\r\n}\r\nconst SET_THEME = 'setTheme';\r\n\r\n\r\nexport const themeReducer = (state:ThemeType = lightTheme, action: SetThemeType):ThemeType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_THEME: {\r\n\t\t\tif (action.value === '1') {\r\n\t\t\t\treturn lightTheme\r\n\t\t\t}\r\n\t\t\tif (action.value === '2') {\r\n\t\t\t\treturn darkTheme\r\n\t\t\t}\r\n\t\t\tif (action.value === '3') {\r\n\t\t\t\treturn greenTheme\r\n\t\t\t}\r\n\t\t\treturn state\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setThemeAC = (value: string): SetThemeType => {\r\n\treturn {type: SET_THEME, value}\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport classes from \"./Home.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {ThemeContext} from \"../../../themes/themes\";\r\n\r\n\r\nexport const Home = () => {\r\n\r\n\tconst theme = useContext(ThemeContext)\r\n\r\n\treturn(\r\n\t\t<div className={classes.home} style={theme}>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useCallback, useContext, useMemo, useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/Task5/UsersPages/PreJunior\";\nimport {Junior} from \"./components/Task5/UsersPages/Junior\";\nimport {JuniorPlus} from \"./components/Task5/UsersPages/JuniorPlus\";\nimport {Home} from \"./components/Task5/UsersPages/Home\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootState} from \"./store/store\";\nimport {ThemeType, ThemeContext} from \"./themes/themes\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\nexport type TaskStateType = {\n\t[key: string]: Array<TasksType>\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = useMemo(()=>{\n\t\treturn(\n\t\t\t[\n\t\t\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t\t\t]\n\t\t)\n\t},[])\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState<TaskStateType>({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = useCallback((newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\t}, [tasks])\n\tlet deleteTask = useCallback((idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}, [tasks])\n\tlet changeStatus = useCallback((idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}, [tasks])\n\tlet changeItemTask = useCallback((idValue: string, TaskValue: string, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.item = TaskValue\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}, [tasks])\n\n\tlet addTodoList = useCallback((title: string) => {\n\t\tlet todoList: TodoListType = {id: v1(), title: title, filterTask: 'all'}\n\t\tsetTodoLists([todoList, ...todoLists])\n\t\tsetTasks({...tasks, [todoList.id]: []})\n\t}, [todoLists])\n\tlet removeTodoList = useCallback((todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}, [todoLists])\n\tlet changeTodoListTitle = useCallback((todoListId: string, titleValue: string) => {\n\t\tlet todoList = todoLists.find(td => td.id === todoListId)\n\t\tif (todoList) {\n\t\t\ttodoList.title = titleValue\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}, [todoLists])\n\tlet changeTasks = useCallback((valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}, [todoLists]);\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = useCallback((value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t}, [namesData])\n\tlet onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t}, [correctField])\n\tlet onKeyPressHandler = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}, [valueInp])\n\tlet onClickBtnHandler = useCallback(() => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}, [valueInp])\n\nconst theme = useSelector<AppRootState, ThemeType>(state => state.webSiteTheme)\n\n\treturn (\n\t\t<ThemeContext.Provider value={theme}>\n\t\t<HashRouter>\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className={'pages'}>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Home/>}/>\n\t\t\t\t\t\t<Route path={'/preJunior'} render={() => <PreJunior dialogsData={dialogsData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValueInp={setValueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnamesData={namesData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttodoLists={todoLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveTodoList={removeTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddTodoList={addTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeItemTask={changeItemTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTodoListTitle={changeTodoListTitle}/>\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path={'/junior'} render={() => <Junior/>}/>\n\t\t\t\t\t\t<Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t\t\t</ThemeContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {loadingReducer} from \"../reducers/loading-reducer\";\r\nimport {themeReducer} from \"../reducers/theme-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n\tloading: loadingReducer,\r\n\twebSiteTheme: themeReducer\r\n})\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"NavBar_navWrapper__3enQr\",\"menu\":\"NavBar_menu__3dqFN\",\"spanMenu\":\"NavBar_spanMenu__7xDjk\",\"spanMenuFocus\":\"NavBar_spanMenuFocus__3lou6\",\"navList\":\"NavBar_navList__1ccpj\",\"navLink\":\"NavBar_navLink__oxSz6\",\"active\":\"NavBar_active__2_7ul\",\"showNav\":\"NavBar_showNav__pru72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\",\"btnsBases\":\"Todo_btnsBases__11cr1\",\"btnsImportance\":\"Todo_btnsImportance__17grW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Select_wrapper__29yGt\",\"country\":\"Select_country__3W9kg\",\"active\":\"Select_active__ipBg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateWrapper\":\"Time_dateWrapper__1EAmB\",\"btns\":\"Time_btns__2M22O\",\"time\":\"Time_time__A3BLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"juniorPlus\":\"JuniorPlus_juniorPlus__3tjsU\",\"container\":\"JuniorPlus_container__MQwYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddItemForm_wrapper__4TCPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Junior_btn__jTev4\",\"range\":\"Junior_range__FxNKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresCompForEditableSpan_wrapper__jEPJZ\",\"btnHandler\":\"PresCompForEditableSpan_btnHandler__2Jlc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSpanWrapper\":\"EditableSpan_editSpanWrapper__30Jru\",\"span\":\"EditableSpan_span__2BwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"Radio_radioWrapper__gIvG_\",\"inputWrapper\":\"Radio_inputWrapper__2OXuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"People_wrapper__3_R8W\",\"btns\":\"People_btns__sBsG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__ixVke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__2VoG4\"};"],"sourceRoot":""}