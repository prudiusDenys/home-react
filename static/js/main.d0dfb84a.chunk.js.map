{"version":3,"sources":["components/Todo/Todo.module.css","components/Dialogs/Message/Message.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Todo/Todo.tsx","common/Input/Input.tsx","common/Button/Button.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/NamesNumber/NamesNumber.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Avatar","className","classes","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","dialogs","dialogsData","Todo","useState","value","setValue","error","setError","elementItem","tasks","map","t","key","id","isDone","item","completedTask","onChange","e","changeStatus","currentTarget","checked","type","onClick","deleteTask","active","setActive","showDisplay","display","todo","title","deleteTitle","removeTodoList","listItem","btns","filterTask","changeTasks","inputWrapper","input","style","placeholder","onKeyPress","charCode","trim","addNewTask","TaskAdd","close","Input","wrapper","correctField","onChangeHandler","onKeyPressHandler","valueInp","placeholderDefault","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","alert","NamesNumber","names","namesData","length","App","reference1","v1","reference2","todoLists","setTodoLists","importance","setTasks","newTaskValue","todoListId","valueNewFilter","todoList","find","tl","idValue","filter","task","filterTodoLists","newFilteredTasks","setNamesData","showMessage","newName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d0dfb84a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n}\r\n\r\nconst Todo = (props: PropsType) => {\r\n\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<input onChange={onChangeStatusHandler} checked={t.isDone} type=\"checkbox\"/>{t.item}\r\n\t\t\t\t\t<button onClick={onClickDeleteHandler}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value, props.id)\r\n\t\t\tsetValue('');\r\n\t\t\tsetActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value, props.id)\r\n\t\t\tsetValue('');\r\n\t\t\tsetActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\r\n\tlet [active, setActive] = useState(false);\r\n\tlet showAddBlock = () => setActive(!active);\r\n\tlet hideAddBlock = () => {\r\n\t\tsetActive(false);\r\n\t\tsetError(null)\r\n\r\n\t}\r\n\r\n\tconst showDisplay = {display: active ? 'block' : 'none'};\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>{props.title}\r\n\t\t\t\t<button className={classes.deleteTitle} onClick={removeTodoListHandler}>Delete ToDoList</button>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<button className={props.filterTask === 'all' ? classes.active : ''} onClick={showAllTasks}>All tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'active' ? classes.active : ''} onClick={showActiveTasks}>Active Tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'completed' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showCompletedTasks}>Completed Tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'height' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showImportanceTasks}>Important</button>\r\n\t\t\t\t<button className={props.filterTask === 'medium' ? classes.active : ''} onClick={showMediumTasks}>Medium\r\n\t\t\t\t\timportance</button>\r\n\t\t\t\t<button className={props.filterTask === 'low' ? classes.active : ''} onClick={showLowTasks}>Low important</button>\r\n\t\t\t\t<button className={active ? classes.active : ''} onClick={showAddBlock}>Add Task</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.inputWrapper}>\r\n\t\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t\t<input className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}/>\r\n\t\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\t\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField?: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n}\r\n\r\nexport const Input = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tconst type = 'text'\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t setValueInp={setValueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t setCorrectField={setCorrectField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = (props: PropsType) => {\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport './App.css';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Todo from \"./components/Todo/Todo\";\nimport {v1} from \"uuid\";\nimport {PresentationComponent} from \"./components/PresentationComponent/PresentationComponent\";\nimport {Button} from \"./common/Button/Button\";\nimport {Input} from \"./common/Input/Input\";\nimport {NamesNumber} from \"./components/NamesNumber/NamesNumber\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = [\n\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t];\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = (newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\n\t}\n\tlet changeTasks = (valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t};\n\tlet deleteTask = (idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}\n\n\tlet changeStatus = (idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\n\tlet removeTodoList = (todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}\n\n\n\tlet todoList = todoLists.map(tl => {\n\n\t\tlet newFilteredTasks = tasks[tl.id]\n\t\tswitch (tl.filterTask) {\n\t\t\tcase 'active':\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\n\t\t\t\tbreak;\n\t\t\tcase 'completed':\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\n\t\t\t\tbreak;\n\t\t\tcase 'height':\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\n\t\t\t\tbreak;\n\t\t\tcase 'medium':\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\n\t\t\t\tbreak;\n\t\t\tcase 'low':\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<Todo key={tl.id}\n\t\t\t\t\t\tid={tl.id}\n\t\t\t\t\t\ttitle={tl.title}\n\t\t\t\t\t\ttasks={newFilteredTasks}\n\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\tfilterTask={tl.filterTask}\n\t\t\t\t\t\tremoveTodoList={removeTodoList}/>\n\t\t)\n\t})\n\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = (value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t};\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t}\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\tlet onClickBtnHandler = () => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Dialogs dialogsData={dialogsData}/>\n\t\t\t\t<div className={'todoListWrapper'}>\n\t\t\t\t\t{todoList}\n\t\t\t\t</div>\n\t\t\t\t<div className={'wrapper'}>\n\t\t\t\t\t<Input valueInp={valueInp}\n\t\t\t\t\t\t\t\t setValueInp={setValueInp}\n\t\t\t\t\t\t\t\t correctField={correctField}\n\t\t\t\t\t\t\t\t setCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\n\t\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\ttitle={'SAY HELLO'} typeOfButton={'red'}/>\n\t\t\t\t</div>\n\t\t\t\t<NamesNumber namesData={namesData}/>\n\t\t\t\t<PresentationComponent/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}