{"version":3,"sources":["components/Task5/NavBar.tsx","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","common/Input/Input.tsx","common/Button/Button.tsx","components/NamesNumber/NamesNumber.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/Todo/AddTaskInput/AddTaskInput.tsx","components/Todo/EditableSpan/EditableSpan.tsx","components/Todo/Todo.tsx","components/Todo/AddItemForm/AddItemForm.tsx","components/Task5/UsersPages/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","components/Task6/PresCompForEditableSpan.tsx","LocalStorageFunctions/LocalStorageFunctions.ts","common/Select/Select.tsx","common/Radio/Radio.tsx","components/task 8/homeWorkReducer.ts","components/task 8/People.tsx","components/Task5/UsersPages/Junior.tsx","components/Task5/UsersPages/JuniorPlus.tsx","components/Task5/UsersPages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Task5/NavBar.module.css","components/Todo/Todo.module.css","components/Dialogs/Message/Message.module.css","common/Select/Select.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Todo/AddItemForm/AddItemForm.module.css","components/Task6/PresCompForEditableSpan.module.css","common/EditableSpan/EditableSpan.module.css","common/Radio/Radio.module.css","components/task 8/People.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css"],"names":["NavBar","useState","showMenu","setShowMenu","className","classes","navWrapper","onClick","menu","spanMenu","spanMenuFocus","navList","showNav","exact","to","navLink","activeClassName","active","Avatar","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","React","memo","console","log","dialogs","dialogsData","Input","wrapper","correctField","input","error","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","onBlur","onBlurHandler","value","valueInp","placeholder","placeholderDefault","autoFocus","type","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","title","NamesNumber","names","namesData","length","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","setBlurFocus","e","currentTarget","charCode","trim","alert","AddTaskInput","setValue","setError","showDisplay","display","inputWrapper","style","addNewTask","setActive","TaskAdd","close","EditableSpan","editMode","setEditMode","inputValue","setInputValue","correctValue","setCorrectValue","TextField","getNewInputValue","helperText","label","onDoubleClick","itemValue","Todo","elementItem","tasks","map","t","key","id","isDone","item","completedTask","changeStatus","checked","color","changeItemTask","IconButton","deleteTask","aria-label","Delete","todo","titleValue","changeTodoListTitle","removeTodoList","listItem","btns","btnsBases","variant","filterTask","changeTasks","btnsImportance","width","AddItemForm","Paper","itemForm","addItem","PlaylistAdd","PreJunior","todoList","todoLists","tl","newFilteredTasks","filter","importance","Grid","container","addNewTodoList","addTodoList","spacing","editSpanWrapper","span","onClickHandler","PresCompForEditableSpan","btnHandler","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Select","collapsed","setCollapsed","hoveredElement","setHoveredElement","selectedItem","items","find","i","hoveredItem","useEffect","country","c","onMouseDown","onMouseEnter","tabIndex","onKeyDown","keyCode","pretendentElement","Radio","radioWrapper","onChangeRadio","htmlFor","homeWorkReducer","action","payload","sort","a","b","p","age","Error","People","people","setPeople","person","Junior","countries","contactMethods","setContactMethods","selectValue","copyContactMethods","r","contactMethod","JuniorPlus","Home","App","reference1","v1","reference2","setTodoLists","setTasks","useCallback","newTaskValue","todoListId","idValue","task","TaskValue","filterTodoLists","td","valueNewFilter","setNamesData","showMessage","newName","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.d39c5b33.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst [showMenu, setShowMenu] = useState(false)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetShowMenu(!showMenu)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.navWrapper}>\r\n\t\t\t<div onClick={onClickHandler} className={classes.menu}>\r\n\t\t\t\t{showMenu ? <span className={`${classes.spanMenu} ${classes.spanMenuFocus}`}>Hide Menu</span>  : <span className={classes.spanMenu}>Show menu</span> }\r\n\t\t\t</div>\r\n\t\t\t<ul className={showMenu ? `${classes.navList} ${classes.showNav}` : classes.navList}>\r\n\t\t\t\t<NavLink exact to={'/'} className={classes.navLink} activeClassName={classes.active}>Home</NavLink>\r\n\t\t\t\t<NavLink to={'/preJunior'} className={classes.navLink} activeClassName={classes.active}>preJunior</NavLink>\r\n\t\t\t\t<NavLink to={'/junior'} className={classes.navLink} activeClassName={classes.active}>Junior</NavLink>\r\n\t\t\t\t<NavLink to={'/juniorPlus'} className={classes.navLink} activeClassName={classes.active}>Junior+</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = React.memo(function (props: propsType){\r\n\tconsole.log('dialogs')\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, FocusEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tvalueInp: string\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tplaceholderDefault?: string\r\n\tonBlurHandler?: ()=>void\r\n\tautoFocus?:boolean\r\n}\r\n\r\nexport const Input = React.memo(function (props: PropsType){\r\n\tconsole.log('input')\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t onBlur={props.onBlurHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t autoFocus={props.autoFocus}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n})","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = React.memo(function (props: PropsType){\r\n\tconsole.log('button')\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n})","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = React.memo(function (props: PropsType){\r\n\tconsole.log('names number')\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, KeyboardEvent, ChangeEvent,FocusEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tconst type = 'text'\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\tlet [blurFocus, setBlurFocus] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetBlurFocus(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t onBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"../Todo.module.css\";\r\n\r\ntype PropsType = {\r\n\taddNewTask: (inputValue: string)=>void\r\n\tactive: boolean\r\n\tsetActive: (boolean: boolean)=>void\r\n}\r\n\r\nexport const AddTaskInput = React.memo(function (props: PropsType){\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\tconst showDisplay = {display: props.active ? 'block' : 'none'};\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet hideAddBlock = () => {\r\n\t\tprops.setActive(false);\r\n\t\tsetError(null)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={classes.inputWrapper}>\r\n\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t<input  className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}/>\r\n\r\n\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\r\n\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n\titemValue: string\r\n\tgetNewInputValue: (inputValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: PropsType){\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [correctValue, setCorrectValue] = useState(true);\r\n\r\n\tconst onDoubleClickHandler = () => {\r\n\t\tsetEditMode(true);\r\n\t\tsetInputValue(props.itemValue)\r\n\t}\r\n\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.currentTarget.value)\r\n\t\tsetCorrectValue(true)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tif (inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst error = {\r\n\t\tbackgroundColor: 'red',\r\n\t}\r\n\r\n\treturn (\r\n\t\teditMode ? <TextField error={!correctValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={correctValue ? '' : 'Task name is missing'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={'edit task'}/>\r\n\t\t\t: <span onDoubleClick={onDoubleClickHandler}>{props.itemValue}</span>\r\n\t)\r\n})","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\nimport {AddTaskInput} from \"./AddTaskInput/AddTaskInput\";\r\nimport {EditableSpan} from \"./EditableSpan/EditableSpan\";\r\nimport {Button, Checkbox} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n\tchangeItemTask: (idValue: string, taskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string,) => void\r\n}\r\n\r\n\r\nconst Todo = React.memo(function (props: PropsType){\r\n\tconsole.log('TODO')\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst showAddBlock = () => setActive(!active);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\tlet getNewInputValue = (inputValue: string) => {\r\n\t\t\t\tprops.changeItemTask(t.id, inputValue, props.id)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<Checkbox  onChange={onChangeStatusHandler} checked={t.isDone} color={\"primary\"}/>\r\n\t\t\t\t\t<EditableSpan itemValue={t.item} getNewInputValue={getNewInputValue}/>\r\n\t\t\t\t\t<IconButton onClick={onClickDeleteHandler} aria-label=\"delete\">\r\n\t\t\t\t\t\t<Delete />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\tlet addNewTask = (title: string) => {\r\n\t\tprops.addNewTask(title, props.id)\r\n\t}\r\n\tlet getNewTitleValue = (titleValue: string) => {\r\n\t\tprops.changeTodoListTitle(props.id, titleValue)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>\r\n\t\t\t\t<EditableSpan itemValue={props.title} getNewInputValue={getNewTitleValue}/>\r\n\t\t\t\t<IconButton onClick={removeTodoListHandler} aria-label=\"delete\">\r\n\t\t\t\t\t<Delete />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<div className={classes.btnsBases}>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'all' ? 'contained' : 'text'} color={\"primary\"} onClick={showAllTasks}>All</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'active' ? 'contained' : 'text'} color={'primary'} onClick={showActiveTasks}>Active</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'completed' ? 'contained' : 'text'} color={\"primary\"} onClick={showCompletedTasks}>Completed</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.btnsImportance}>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'height' ? 'contained' : 'text'} color={\"primary\"} onClick={showImportanceTasks}>Important</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'medium' ? 'contained' : 'text'} color={\"primary\"} onClick={showMediumTasks}>Medium</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'low' ? 'contained' : 'text'} color={\"primary\"} onClick={showLowTasks}>Low</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Button style={{width: '100%'}}  className={active ? classes.active : ''} color={\"secondary\"} onClick={showAddBlock}>Add Task</Button>\r\n\t\t\t</div>\r\n\t\t\t<AddTaskInput addNewTask={addNewTask}\r\n\t\t\t\t\t\t\t\t\t\tactive={active}\r\n\t\t\t\t\t\t\t\t\t\tsetActive={setActive}/>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./AddItemForm.module.css\";\r\nimport {Paper, TextField} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {PlaylistAdd} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\taddItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function (props: PropsType){\r\n\tconsole.log('itemForm')\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<div className={classes.itemForm}>\r\n\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t<TextField error={!!error}\r\n\t\t\t\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t\t label={'Add new TodoList'}\r\n\t\t\t\t\t\t\t\t\t\t helperText={!!error ? \"Incorrect entry.\" : ''}/>\r\n\t\t\t\t\t<IconButton onClick={addTaskHandler} color={\"primary\"}>\r\n\t\t\t\t\t\t<PlaylistAdd/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./PreJunior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {dialogsDataType, FilterTaskType, NamesData, TaskStateType, TodoListType} from \"../../../App\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\nimport {Input} from \"../../../common/Input/Input\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {NamesNumber} from \"../../NamesNumber/NamesNumber\";\r\nimport {PresentationComponent} from \"../../PresentationComponent/PresentationComponent\";\r\nimport Todo from \"../../Todo/Todo\";\r\nimport {AddItemForm} from \"../../Todo/AddItemForm/AddItemForm\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n\tdialogsData: Array<dialogsDataType>\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n\tonClickBtnHandler: () => void\r\n\tnamesData: Array<NamesData>\r\n\ttasks: TaskStateType\r\n\ttodoLists: Array<TodoListType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tremoveTodoList: (todoListId: string) => void\r\n\taddTodoList: (title: string) => void\r\n\tchangeItemTask: (idValue: string, TaskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string) => void\r\n}\r\n\r\nexport const PreJunior = React.memo(function PreJunior(props: PropsType) {\r\n\r\n\tlet todoList = props.todoLists.map(tl => {\r\n\r\n\t\tlet newFilteredTasks = props.tasks[tl.id]\r\n\t\tswitch (tl.filterTask) {\r\n\t\t\tcase 'active':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'completed':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'height':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'medium':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'low':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item key={tl.id}>\r\n\t\t\t\t<Paper>\r\n\t\t\t\t\t<Todo id={tl.id}\r\n\t\t\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\t\t\ttasks={newFilteredTasks}\r\n\t\t\t\t\t\t\t\tchangeTasks={props.changeTasks}\r\n\t\t\t\t\t\t\t\taddNewTask={props.addNewTask}\r\n\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\t\t\t\t\tchangeStatus={props.changeStatus}\r\n\t\t\t\t\t\t\t\tfilterTask={tl.filterTask}\r\n\t\t\t\t\t\t\t\tremoveTodoList={props.removeTodoList}\r\n\t\t\t\t\t\t\t\tchangeItemTask={props.changeItemTask} changeTodoListTitle={props.changeTodoListTitle}/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Dialogs dialogsData={props.dialogsData}/>\r\n\r\n\t\t\t<div className={'todoListWrapper'}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<div className={classes.addNewTodoList}>\r\n\t\t\t\t\t\t<AddItemForm addItem={props.addTodoList}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t{todoList}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<div className={'inputWrapper'}>\r\n\t\t\t\t<Input valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\r\n\t\t\t\t<Button onClickBtnHandler={props.onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SAY HELLO'}\r\n\t\t\t\t\t\t\t\ttypeOfButton={'red'}/>\r\n\t\t\t</div>\r\n\t\t\t<NamesNumber namesData={props.namesData}/>\r\n\t\t\t<PresentationComponent/>\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./EditableSpan.module.css\";\r\nimport {Input} from \"../Input/Input\";\r\n\r\n\r\ntype PropsType = {\r\n\teditMode: boolean\r\n\tvalueInp: string\r\n\tonBlurHandler: ()=>void\r\n\tonClickHandler:()=>void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>)=>void\r\n}\r\n\r\nexport const EditableSpan = (props: PropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.editSpanWrapper}>\r\n\t\t\t{\r\n\t\t\t\tprops.editMode ?\r\n\t\t\t\t\t<Input onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t\t valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t\t onBlurHandler={props.onBlurHandler}\r\n\t\t\t\t\t\t\t\t autoFocus={true}\r\n\t\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t\t placeholderDefault={'Write your status'}\r\n\t\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}/> :\r\n\t\t\t\t\t<span className={classes.span}\r\n\t\t\t\t\t\t\t\tonClick={props.onClickHandler}>{props.valueInp !== '' ? props.valueInp : \"You don't have any status\"}</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./PresCompForEditableSpan.module.css\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {restoreState, saveState} from \"../../LocalStorageFunctions/LocalStorageFunctions\";\r\n\r\n\r\nexport const PresCompForEditableSpan = () => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [valueInp, setValueInp] = useState('');\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onClickHandler = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\tsetValueInp(valueInp)\r\n\t\t\tsetEditMode(false)\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\tlet saveStateFunction = () => {\r\n\t\tsaveState('data', valueInp);\r\n\t}\r\n\tlet restoreStateFunction = () => {\r\n\t\tsetValueInp(restoreState('data', ''));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<EditableSpan editMode={editMode}\r\n\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\r\n\t\t\t\t\t\t\t\t\t\tonBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\tonClickHandler={onClickHandler}\r\n\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\r\n\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}/>\r\n\t\t\t<div className={classes.btnHandler}>\r\n\t\t\t\t<Button onClickBtnHandler={saveStateFunction} title={'Save state'}/>\r\n\t\t\t\t<Button onClickBtnHandler={restoreStateFunction} title={'Restore state'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","export function saveState<T>(key: string, state: T) {\r\n\tconst stateAsString = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\tconst stateAsString = localStorage.getItem(key);\r\n\tif (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n\treturn defaultState;\r\n}","import React, {useState, KeyboardEvent, useEffect} from \"react\";\r\nimport classes from \"./Select.module.css\";\r\nimport {CountriesType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\tvalue: string\r\n\titems: Array<CountriesType>\r\n\tonChange: (selectValue: string) => void\r\n}\r\n\r\nexport const Select = React.memo(function (props: PropsType){\r\n\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\tconst [hoveredElement, setHoveredElement] = useState(props.value);\r\n\r\n\tconst selectedItem = props.items.find(i => i.value === props.value)\r\n\tconst hoveredItem = props.items.find(i => i.value === hoveredElement)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetCollapsed(!collapsed)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tsetCollapsed(true)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHoveredElement(props.value)\r\n\t}, [props.value]);\r\n\tconst onKeyDownHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n\t\tconsole.log(e.keyCode)\r\n\t\tif (e.keyCode === 40 || e.keyCode === 38) {\r\n\t\t\tfor (let i = 0; i < props.items.length; i++) {\r\n\t\t\t\tif (props.items[i].value === hoveredElement) {\r\n\t\t\t\t\tconst pretendentElement = e.keyCode === 40 ? props.items[i + 1] : props.items[i - 1];\r\n\t\t\t\t\tif (pretendentElement) {\r\n\t\t\t\t\t\tprops.onChange(pretendentElement.value);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!selectedItem) {\r\n\t\t\t\tprops.onChange(props.items[0].value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e.keyCode === 13 || e.keyCode === 27) {\r\n\t\t\tsetCollapsed(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst country = props.items.map(c => {\r\n\r\n\t\tconst onMouseDownHandler = () => {\r\n\t\t\tprops.onChange(c.value)\r\n\t\t}\r\n\t\tconst onMouseEnterHandler = () => {\r\n\t\t\tsetHoveredElement(c.value)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={(hoveredItem === c) ? `${classes.country} ${classes.active}` : classes.country}\r\n\t\t\t\t\t key={c.value}\r\n\t\t\t\t\t onMouseDown={onMouseDownHandler}\r\n\t\t\t\t\t onMouseEnter={onMouseEnterHandler}>{c.country}\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.wrapper} tabIndex={0} onKeyDown={onKeyDownHandler}>\r\n\t\t\t<h3 className={classes.active}\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\tonClick={onClickHandler}\r\n\t\t\t\t\tonBlur={onBlurHandler}>{selectedItem && selectedItem.country}</h3>\r\n\t\t\t{\r\n\t\t\t\t!collapsed &&\r\n        <div>\r\n\t\t\t\t\t{country}\r\n        </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n})","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Radio.module.css\";\r\nimport {ContactMethodType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\titems: Array<ContactMethodType>\r\n\tonChangeRadio: (id: string, checked: boolean) => void\r\n}\r\n\r\nexport const Radio = React.memo(function (props: PropsType){\r\n\r\n\treturn (\r\n\t\t<div className={classes.radioWrapper}>\r\n\t\t\t{props.items.map(i => {\r\n\r\n\t\t\t\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tprops.onChangeRadio(i.id, e.currentTarget.checked)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={classes.inputWrapper}>\r\n\t\t\t\t\t\t<input key={i.id}\r\n\t\t\t\t\t\t\t\t\t id = {i.id}\r\n\t\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t type=\"radio\"\r\n\t\t\t\t\t\t\t\t\t name={i.name}\r\n\t\t\t\t\t\t\t\t\t value={i.value}\r\n\t\t\t\t\t\t\t\t\t checked={i.checked}/>\r\n\t\t\t\t\t\t<label htmlFor={i.id}>{i.value}</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n})","type StateType = {\r\n\tid: string\r\n\tname: string\r\n\tage: number\r\n}\r\ntype ActionsType = SortPeopleUpType | SortPeopleDownType | GetAdultPeopleType\r\ntype SortPeopleUpType = {\r\n\ttype: 'SORT',\r\n\tpayload: 'up'\r\n}\r\ntype SortPeopleDownType = {\r\n\ttype: 'SORT'\r\n\tpayload: 'down'\r\n}\r\ntype GetAdultPeopleType = {\r\n\ttype: 'CHECK'\r\n\tpayload: 18\r\n}\r\n\r\nexport const homeWorkReducer = (state: Array<StateType>, action: ActionsType): Array<StateType> => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SORT\": {\r\n\t\t\tif (action.payload == 'up') {\r\n\t\t\t\treturn [...state.sort((a, b): number => {\r\n\t\t\t\t\tif (a.name > b.name) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.name < b.name) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t})]\r\n\t\t\t}\r\n\t\t\tif (action.payload === 'down') {\r\n\t\t\t\treturn [...state.sort((a, b): number => {\r\n\t\t\t\t\tif (a.name < b.name) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.name > b.name) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t})]\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"CHECK\": {\r\n\t\t\treturn [...state.filter(p => p.age >= 18)]\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow new Error('You passed a wrong action type');\r\n\t}\r\n\treturn []\r\n}\r\n\r\nexport const sortPeopleUpAC = (payload: 'up'): SortPeopleUpType => {\r\n\treturn {type: 'SORT', payload}\r\n}\r\nexport const sortPeopleDownAC = (payload: 'down'): SortPeopleDownType => {\r\n\treturn {type: 'SORT', payload}\r\n}\r\nexport const getAdultPeopleAC = (payload: 18): GetAdultPeopleType => {\r\n\treturn {type: 'CHECK', payload}\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./People.module.css\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {getAdultPeopleAC, homeWorkReducer, sortPeopleDownAC, sortPeopleUpAC} from \"./homeWorkReducer\";\r\n\r\nexport const People = () => {\r\n\r\n\tconst [people, setPeople] = useState([\r\n\t\t{id: '1', name: 'Denis', age: 27},\r\n\t\t{id: '2', name: 'Andrey', age: 30},\r\n\t\t{id: '3', name: 'Ivan', age: 13},\r\n\t\t{id: '4', name: 'Misha', age: 9},\r\n\t\t{id: '5', name: 'Katya', age: 17},\r\n\t\t{id: '6', name: 'Sasha', age: 18},\r\n\t])\r\n\r\n\tconst person = people.map(p => {\r\n\t\treturn (\r\n\t\t\t<div key={p.id}>{p.name} {p.age}</div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst sortPeopleUpHandler = () => {\r\n\t\tsetPeople(homeWorkReducer(people, sortPeopleUpAC('up')))\r\n\t}\r\n\tconst sortPeopleDownHandler = () => {\r\n\t\tsetPeople(homeWorkReducer(people, sortPeopleDownAC('down')))\r\n\t}\r\n\tconst getAdultPeopleHandler = () => {\r\n\t\tsetPeople(homeWorkReducer(people, getAdultPeopleAC(18)))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div>\r\n\t\t\t\t{person}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<Button title={'Sort up'} onClickBtnHandler={sortPeopleUpHandler}/>\r\n\t\t\t\t<Button title={'Sort down'} onClickBtnHandler={sortPeopleDownHandler}/>\r\n\t\t\t\t<Button title={'Adult people'} onClickBtnHandler={getAdultPeopleHandler}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState} from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {PresCompForEditableSpan} from \"../../Task6/PresCompForEditableSpan\";\r\nimport {Select} from \"../../../common/Select/Select\";\r\nimport {Radio} from \"../../../common/Radio/Radio\";\r\nimport {People} from \"../../task 8/People\";\r\n\r\nexport type CountriesType = {\r\n\tvalue: string\r\n\tcountry: string\r\n}\r\nexport type ContactMethodType = {\r\n\tid: string\r\n\tname: string\r\n\tvalue: string\r\n\tchecked: boolean\r\n}\r\n\r\nexport const Junior = () => {\r\n\r\n\tconst countries: Array<CountriesType> = [\r\n\t\t{value: '1', country: 'Belarus'},\r\n\t\t{value: '2', country: 'Russia'},\r\n\t\t{value: '3', country: 'Ukraine'},\r\n\t\t{value: '4', country: 'Italy'},\r\n\t]\r\n\r\n\tconst [value, setValue] = useState<string>(countries[0].value);\r\n\r\n\tconst onChange = (selectValue: string) => {\r\n\t\tsetValue(selectValue);\r\n\t}\r\n\r\n/////////////////// RADIO ///////////////////////////////\r\n\r\n\tconst [contactMethods, setContactMethods] = useState<Array<ContactMethodType>>([\r\n\t\t{id: '1', name: 'contact', value: 'Phone', checked: false},\r\n\t\t{id: '2', name: 'contact', value: 'Mobile phone', checked: false},\r\n\t\t{id: '3', name: 'contact', value: 'Email', checked: true},\r\n\t\t{id: '4', name: 'contact', value: 'Fax', checked: false},\r\n\t])\r\n\r\n\tconst onChangeRadio = (id: string, checked: boolean) => {\r\n\t\tconst copyContactMethods = contactMethods.map(r => {\r\n\t\t\tif (r.checked) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...r,\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t})\r\n\r\n\t\tconst contactMethod = copyContactMethods.find(r => r.id === id)\r\n\t\tif (contactMethod) {\r\n\t\t\tcontactMethod.checked = checked\r\n\t\t\tsetContactMethods([...copyContactMethods])\r\n\t\t}\r\n\t}\r\n\r\n\t////////////// TASK 8 /////////////////////////////////\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t\t<PresCompForEditableSpan/>\r\n\t\t\t<Select value={value} items={countries} onChange={onChange}/>\r\n\t\t\t<Radio items={contactMethods} onChangeRadio={onChangeRadio}/>\r\n\t\t\t<People/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\n\r\n\r\n\r\nexport const Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useCallback, useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/Task5/UsersPages/PreJunior\";\nimport {Junior} from \"./components/Task5/UsersPages/Junior\";\nimport {JuniorPlus} from \"./components/Task5/UsersPages/JuniorPlus\";\nimport {Home} from \"./components/Task5/UsersPages/Home\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\nexport type TaskStateType = {\n\t[key: string]: Array<TasksType>\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = [\n\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t];\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState<TaskStateType>({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = useCallback((newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\t}, [tasks])\n\tlet deleteTask = useCallback((idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}, [tasks])\n\tlet changeStatus = useCallback((idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}, [tasks])\n\tlet changeItemTask = useCallback((idValue: string, TaskValue: string, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.item = TaskValue\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}, [tasks])\n\n\tlet addTodoList = useCallback((title: string) => {\n\t\tlet todoList: TodoListType = {id: v1(), title: title, filterTask: 'all'}\n\t\tsetTodoLists([todoList, ...todoLists])\n\t\tsetTasks({...tasks, [todoList.id]: []})\n\t}, [todoLists])\n\tlet removeTodoList = useCallback((todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}, [todoLists])\n\tlet changeTodoListTitle = useCallback((todoListId: string, titleValue: string) => {\n\t\tlet todoList = todoLists.find(td => td.id === todoListId)\n\t\tif (todoList) {\n\t\t\ttodoList.title = titleValue\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}, [todoLists])\n\tlet changeTasks = useCallback((valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}, [todoLists]);\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = useCallback((value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t},[])\n\tlet onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t},[])\n\tlet onKeyPressHandler = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t},[])\n\tlet onClickBtnHandler = useCallback(() => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t},[])\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className={'pages'}>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Home/>}/>\n\t\t\t\t\t\t<Route path={'/preJunior'} render={() => <PreJunior dialogsData={dialogsData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValueInp={setValueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnamesData={namesData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttodoLists={todoLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveTodoList={removeTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddTodoList={addTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeItemTask={changeItemTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTodoListTitle={changeTodoListTitle}/>\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path={'/junior'} render={() => <Junior/>}/>\n\t\t\t\t\t\t<Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"NavBar_navWrapper__3enQr\",\"menu\":\"NavBar_menu__3dqFN\",\"spanMenu\":\"NavBar_spanMenu__7xDjk\",\"spanMenuFocus\":\"NavBar_spanMenuFocus__3lou6\",\"navList\":\"NavBar_navList__1ccpj\",\"navLink\":\"NavBar_navLink__oxSz6\",\"active\":\"NavBar_active__2_7ul\",\"showNav\":\"NavBar_showNav__pru72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\",\"btnsBases\":\"Todo_btnsBases__11cr1\",\"btnsImportance\":\"Todo_btnsImportance__17grW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Select_wrapper__29yGt\",\"country\":\"Select_country__3W9kg\",\"active\":\"Select_active__ipBg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddItemForm_wrapper__4TCPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresCompForEditableSpan_wrapper__jEPJZ\",\"btnHandler\":\"PresCompForEditableSpan_btnHandler__2Jlc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSpanWrapper\":\"EditableSpan_editSpanWrapper__30Jru\",\"span\":\"EditableSpan_span__2BwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"Radio_radioWrapper__gIvG_\",\"inputWrapper\":\"Radio_inputWrapper__2OXuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"People_wrapper__3_R8W\",\"btns\":\"People_btns__sBsG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};"],"sourceRoot":""}