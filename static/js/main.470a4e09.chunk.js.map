{"version":3,"sources":["components/Todo/Todo.module.css","components/Task5/NavBar.module.css","components/Dialogs/Message/Message.module.css","components/Todo/AddItemForm/AddItemForm.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Task6/PresCompForEditableSpan.module.css","common/EditableSpan/EditableSpan.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css","components/Task5/NavBar.tsx","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","common/Input/Input.tsx","common/Button/Button.tsx","components/NamesNumber/NamesNumber.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/Todo/AddTaskInput/AddTaskInput.tsx","components/Todo/EditableSpan/EditableSpan.tsx","components/Todo/Todo.tsx","components/Todo/AddItemForm/AddItemForm.tsx","components/Task5/UsersPages/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","components/Task6/PresCompForEditableSpan.tsx","LocalStorageFunctions/LocalStorageFunctions.ts","components/Task5/UsersPages/Junior.tsx","components/Task5/UsersPages/JuniorPlus.tsx","components/Task5/UsersPages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","useState","showMenu","setShowMenu","className","classes","navWrapper","onClick","menu","spanMenu","spanMenuFocus","navList","showNav","exact","to","navLink","activeClassName","active","Avatar","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","dialogs","dialogsData","Input","wrapper","correctField","input","error","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","onBlur","onBlurHandler","value","valueInp","placeholder","placeholderDefault","autoFocus","type","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","title","NamesNumber","names","namesData","length","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","setBlurFocus","e","currentTarget","charCode","trim","alert","AddTaskInput","setValue","setError","showDisplay","display","inputWrapper","style","addNewTask","setActive","TaskAdd","close","EditableSpan","editMode","setEditMode","inputValue","setInputValue","correctValue","setCorrectValue","undefined","backgroundColor","getNewInputValue","onDoubleClick","itemValue","Todo","elementItem","tasks","map","t","key","id","isDone","item","completedTask","changeStatus","checked","changeItemTask","deleteTask","todo","titleValue","changeTodoListTitle","deleteTitle","removeTodoList","listItem","btns","filterTask","changeTasks","AddItemForm","itemForm","addItem","taskAdd","PreJunior","todoList","todoLists","tl","newFilteredTasks","filter","importance","addNewTodoList","addTodoList","editSpanWrapper","span","onClickHandler","PresCompForEditableSpan","btnHandler","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Junior","JuniorPlus","Home","App","reference1","v1","reference2","setTodoLists","setTasks","newTaskValue","todoListId","valueNewFilter","find","idValue","td","task","TaskValue","filterTodoLists","setNamesData","showMessage","newName","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.470a4e09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"NavBar_navWrapper__3enQr\",\"menu\":\"NavBar_menu__3dqFN\",\"spanMenu\":\"NavBar_spanMenu__7xDjk\",\"spanMenuFocus\":\"NavBar_spanMenuFocus__3lou6\",\"navList\":\"NavBar_navList__1ccpj\",\"navLink\":\"NavBar_navLink__oxSz6\",\"active\":\"NavBar_active__2_7ul\",\"showNav\":\"NavBar_showNav__pru72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddItemForm_wrapper__4TCPQ\",\"inputValue\":\"AddItemForm_inputValue__2ALvs\",\"error\":\"AddItemForm_error__hUnFS\",\"taskAdd\":\"AddItemForm_taskAdd__2u52i\",\"errorText\":\"AddItemForm_errorText__3lo_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresCompForEditableSpan_wrapper__jEPJZ\",\"btnHandler\":\"PresCompForEditableSpan_btnHandler__2Jlc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSpanWrapper\":\"EditableSpan_editSpanWrapper__30Jru\",\"span\":\"EditableSpan_span__2BwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};","import React, {useState} from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst [showMenu, setShowMenu] = useState(false)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetShowMenu(!showMenu)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.navWrapper}>\r\n\t\t\t<div onClick={onClickHandler} className={classes.menu}>\r\n\t\t\t\t{showMenu ? <span className={`${classes.spanMenu} ${classes.spanMenuFocus}`}>Hide Menu</span>  : <span className={classes.spanMenu}>Show menu</span> }\r\n\t\t\t</div>\r\n\t\t\t<ul className={showMenu ? `${classes.navList} ${classes.showNav}` : classes.navList}>\r\n\t\t\t\t<NavLink exact to={'/'} className={classes.navLink} activeClassName={classes.active}>Home</NavLink>\r\n\t\t\t\t<NavLink to={'/preJunior'} className={classes.navLink} activeClassName={classes.active}>preJunior</NavLink>\r\n\t\t\t\t<NavLink to={'/junior'} className={classes.navLink} activeClassName={classes.active}>Junior</NavLink>\r\n\t\t\t\t<NavLink to={'/juniorPlus'} className={classes.navLink} activeClassName={classes.active}>Junior+</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, FocusEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tvalueInp: string\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tplaceholderDefault?: string\r\n\tonBlurHandler?: ()=>void\r\n\tautoFocus?:boolean\r\n}\r\n\r\nexport const Input = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t onBlur={props.onBlurHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t autoFocus={props.autoFocus}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = (props: PropsType) => {\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, KeyboardEvent, ChangeEvent,FocusEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tconst type = 'text'\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\tlet [blurFocus, setBlurFocus] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetBlurFocus(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t onBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"../Todo.module.css\";\r\n\r\ntype PropsType = {\r\n\taddNewTask: (inputValue: string)=>void\r\n\tactive: boolean\r\n\tsetActive: (boolean: boolean)=>void\r\n}\r\n\r\nexport const AddTaskInput = (props: PropsType) => {\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\tconst showDisplay = {display: props.active ? 'block' : 'none'};\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet hideAddBlock = () => {\r\n\t\tprops.setActive(false);\r\n\t\tsetError(null)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={classes.inputWrapper}>\r\n\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t<input className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}/>\r\n\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n\titemValue: string\r\n\tgetNewInputValue: (inputValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = (props: PropsType) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [correctValue, setCorrectValue] = useState(true);\r\n\r\n\tconst onDoubleClickHandler = () => {\r\n\t\tsetEditMode(true);\r\n\t\tsetInputValue(props.itemValue)\r\n\t}\r\n\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.currentTarget.value)\r\n\t\tsetCorrectValue(true)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tif (inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst error = {\r\n\t\tbackgroundColor: 'red',\r\n\t}\r\n\r\n\treturn (\r\n\t\teditMode ? <input style={correctValue ? undefined : error} type=\"text\" value={inputValue} onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlurHandler} onKeyPress={onKeyPressHandler} autoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={correctValue ? '' : \"Task name is missing\"}/>\r\n\t\t\t: <span onDoubleClick={onDoubleClickHandler}>{props.itemValue}</span>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\nimport {AddTaskInput} from \"./AddTaskInput/AddTaskInput\";\r\nimport {EditableSpan} from \"./EditableSpan/EditableSpan\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n\tchangeItemTask: (idValue: string, taskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string,) => void\r\n}\r\n\r\nconst Todo = (props: PropsType) => {\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst showAddBlock = () => setActive(!active);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\tlet getNewInputValue = (inputValue: string) => {\r\n\t\t\t\tprops.changeItemTask(t.id, inputValue, props.id)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<input onChange={onChangeStatusHandler} checked={t.isDone} type=\"checkbox\"/>\r\n\t\t\t\t\t<EditableSpan itemValue={t.item} getNewInputValue={getNewInputValue}/>\r\n\t\t\t\t\t<button onClick={onClickDeleteHandler}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\tlet addNewTask = (title: string) => {\r\n\t\tprops.addNewTask(title, props.id)\r\n\t}\r\n\tlet getNewTitleValue = (titleValue: string) => {\r\n\t\tprops.changeTodoListTitle(props.id, titleValue)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>\r\n\t\t\t\t<EditableSpan itemValue={props.title} getNewInputValue={getNewTitleValue}/>\r\n\t\t\t\t<button className={classes.deleteTitle} onClick={removeTodoListHandler}>Delete ToDoList</button>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<button className={props.filterTask === 'all' ? classes.active : ''} onClick={showAllTasks}>All tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'active' ? classes.active : ''} onClick={showActiveTasks}>Active Tasks\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={props.filterTask === 'completed' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showCompletedTasks}>Completed Tasks\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={props.filterTask === 'height' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showImportanceTasks}>Important\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={props.filterTask === 'medium' ? classes.active : ''} onClick={showMediumTasks}>Medium\r\n\t\t\t\t\timportance\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={props.filterTask === 'low' ? classes.active : ''} onClick={showLowTasks}>Low important\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={active ? classes.active : ''} onClick={showAddBlock}>Add Task</button>\r\n\t\t\t</div>\r\n\t\t\t<AddTaskInput addNewTask={addNewTask}\r\n\t\t\t\t\t\t\t\t\t\tactive={active}\r\n\t\t\t\t\t\t\t\t\t\tsetActive={setActive}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./AddItemForm.module.css\";\r\n\r\ntype PropsType = {\r\n\taddItem: (title: string)=>void\r\n}\r\n\r\nexport const AddItemForm = (props: PropsType) => {\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className={classes.itemForm}>\r\n\t\t\t<h3>Add new TodoList</h3>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<input className={error ? classes.error : classes.inputValue} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}/>\r\n\t\t\t\t<button onClick={addTaskHandler} className={classes.taskAdd}>Add</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./PreJunior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {dialogsDataType, FilterTaskType, NamesData, TaskStateType, TodoListType} from \"../../../App\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\nimport {Input} from \"../../../common/Input/Input\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {NamesNumber} from \"../../NamesNumber/NamesNumber\";\r\nimport {PresentationComponent} from \"../../PresentationComponent/PresentationComponent\";\r\nimport Todo from \"../../Todo/Todo\";\r\nimport {AddItemForm} from \"../../Todo/AddItemForm/AddItemForm\";\r\n\r\ntype PropsType = {\r\n\tdialogsData: Array<dialogsDataType>\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n\tonClickBtnHandler: () => void\r\n\tnamesData: Array<NamesData>\r\n\ttasks: TaskStateType\r\n\ttodoLists: Array<TodoListType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tremoveTodoList: (todoListId: string) => void\r\n\taddTodoList: (title: string) => void\r\n\tchangeItemTask: (idValue: string, TaskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string) => void\r\n\r\n}\r\n\r\nexport const PreJunior = (props: PropsType) => {\r\n\r\n\tlet todoList = props.todoLists.map(tl => {\r\n\r\n\t\tlet newFilteredTasks = props.tasks[tl.id]\r\n\t\tswitch (tl.filterTask) {\r\n\t\t\tcase 'active':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'completed':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'height':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'medium':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'low':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Todo key={tl.id}\r\n\t\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\t\ttasks={newFilteredTasks}\r\n\t\t\t\t\t\t\tchangeTasks={props.changeTasks}\r\n\t\t\t\t\t\t\taddNewTask={props.addNewTask}\r\n\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\t\t\t\tchangeStatus={props.changeStatus}\r\n\t\t\t\t\t\t\tfilterTask={tl.filterTask}\r\n\t\t\t\t\t\t\tremoveTodoList={props.removeTodoList}\r\n\t\t\t\t\t\t\tchangeItemTask={props.changeItemTask} changeTodoListTitle={props.changeTodoListTitle}/>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Dialogs dialogsData={props.dialogsData}/>\r\n\r\n\t\t\t<div className={'todoListWrapper'}>\r\n\t\t\t\t<div className={classes.addNewTodoList}>\r\n\t\t\t\t\t<AddItemForm addItem={props.addTodoList}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{todoList}\r\n\t\t\t</div>\r\n\t\t\t<div className={'inputWrapper'}>\r\n\t\t\t\t<Input valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\r\n\t\t\t\t<Button onClickBtnHandler={props.onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SAY HELLO'}\r\n\t\t\t\t\t\t\t\ttypeOfButton={'red'}/>\r\n\t\t\t</div>\r\n\t\t\t<NamesNumber namesData={props.namesData}/>\r\n\t\t\t<PresentationComponent/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./EditableSpan.module.css\";\r\nimport {Input} from \"../Input/Input\";\r\n\r\n\r\ntype PropsType = {\r\n\teditMode: boolean\r\n\tvalueInp: string\r\n\tonBlurHandler: ()=>void\r\n\tonClickHandler:()=>void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>)=>void\r\n}\r\n\r\nexport const EditableSpan = (props: PropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.editSpanWrapper}>\r\n\t\t\t{\r\n\t\t\t\tprops.editMode ?\r\n\t\t\t\t\t<Input onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t\t valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t\t onBlurHandler={props.onBlurHandler}\r\n\t\t\t\t\t\t\t\t autoFocus={true}\r\n\t\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t\t placeholderDefault={'Write your status'}\r\n\t\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}/> :\r\n\t\t\t\t\t<span className={classes.span}\r\n\t\t\t\t\t\t\t\tonClick={props.onClickHandler}>{props.valueInp !== '' ? props.valueInp : \"You don't have any status\"}</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./PresCompForEditableSpan.module.css\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {restoreState, saveState} from \"../../LocalStorageFunctions/LocalStorageFunctions\";\r\n\r\n\r\nexport const PresCompForEditableSpan = () => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [valueInp, setValueInp] = useState('');\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onClickHandler = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\tsetValueInp(valueInp)\r\n\t\t\tsetEditMode(false)\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\tlet saveStateFunction = () => {\r\n\t\tsaveState('data', valueInp);\r\n\t}\r\n\tlet restoreStateFunction = () => {\r\n\t\tsetValueInp(restoreState('data', ''));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<EditableSpan editMode={editMode}\r\n\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\r\n\t\t\t\t\t\t\t\t\t\tonBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\tonClickHandler={onClickHandler}\r\n\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\r\n\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}/>\r\n\t\t\t<div className={classes.btnHandler}>\r\n\t\t\t\t<Button onClickBtnHandler={saveStateFunction} title={'Save state'}/>\r\n\t\t\t\t<Button onClickBtnHandler={restoreStateFunction} title={'Restore state'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","export function saveState<T>(key: string, state: T) {\r\n\tconst stateAsString = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\tconst stateAsString = localStorage.getItem(key);\r\n\tif (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n\treturn defaultState;\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {PresCompForEditableSpan} from \"../../Task6/PresCompForEditableSpan\";\r\n\r\n\r\n\r\nexport const Junior = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t\t\t\t<PresCompForEditableSpan/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\n\r\n\r\n\r\nexport const Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/Task5/UsersPages/PreJunior\";\nimport {Junior} from \"./components/Task5/UsersPages/Junior\";\nimport {JuniorPlus} from \"./components/Task5/UsersPages/JuniorPlus\";\nimport {Home} from \"./components/Task5/UsersPages/Home\";\nimport {PresCompForEditableSpan} from \"./components/Task6/PresCompForEditableSpan\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\nexport type TaskStateType = {\n\t[key: string]: Array<TasksType>\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = [\n\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t];\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState<TaskStateType>({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = (newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\n\t}\n\tlet changeTasks = (valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t};\n\tlet deleteTask = (idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}\n\n\tlet changeTodoListTitle = (todoListId: string, titleValue: string) => {\n\t\tlet todoList = todoLists.find(td => td.id === todoListId)\n\t\tif (todoList) {\n\t\t\ttodoList.title = titleValue\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}\n\n\tlet changeStatus = (idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\n\tlet changeItemTask = (idValue: string, TaskValue: string, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.item = TaskValue\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\n\tlet removeTodoList = (todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}\n\n\tconst addTodoList = (title: string) => {\n\t\tlet todoList: TodoListType = {id: v1(), title: title, filterTask: 'all'}\n\t\tsetTodoLists([todoList, ...todoLists])\n\t\tsetTasks({...tasks, [todoList.id]: []})\n\t}\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = (value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t};\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t}\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\tlet onClickBtnHandler = () => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className={'pages'}>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Home/>}/>\n\t\t\t\t\t\t<Route path={'/preJunior'} render={() => <PreJunior dialogsData={dialogsData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValueInp={setValueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnamesData={namesData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttodoLists={todoLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveTodoList={removeTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddTodoList={addTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeItemTask={changeItemTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTodoListTitle={changeTodoListTitle}/>\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path={'/junior'} render={() => <Junior/>}/>\n\t\t\t\t\t\t<Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}