{"version":3,"sources":["components/Todo/Todo.module.css","components/Task5/NavBar.module.css","components/Dialogs/Message/Message.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css","components/Task5/NavBar.tsx","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","common/Input/Input.tsx","common/Button/Button.tsx","components/NamesNumber/NamesNumber.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/Todo/Todo.tsx","components/Task5/UsersPages/PreJunior.tsx","components/Task5/UsersPages/Junior.tsx","components/Task5/UsersPages/JuniorPlus.tsx","components/Task5/UsersPages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","useState","showMenu","setShowMenu","className","classes","navWrapper","onClick","menu","spanMenu","spanMenuFocus","navList","showNav","exact","to","navLink","activeClassName","active","Avatar","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","dialogs","dialogsData","Input","wrapper","correctField","input","error","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","value","valueInp","placeholder","placeholderDefault","type","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","title","NamesNumber","names","namesData","length","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","e","currentTarget","charCode","trim","alert","Todo","setValue","setError","elementItem","tasks","map","t","key","id","isDone","item","completedTask","changeStatus","checked","deleteTask","setActive","showDisplay","display","todo","deleteTitle","removeTodoList","listItem","btns","filterTask","changeTasks","inputWrapper","style","addNewTask","TaskAdd","close","PreJunior","todoList","todoLists","tl","newFilteredTasks","filter","importance","Junior","JuniorPlus","Home","App","reference1","v1","reference2","setTodoLists","setTasks","newTaskValue","todoListId","valueNewFilter","find","idValue","task","filterTodoLists","setNamesData","showMessage","newName","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5489147f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"NavBar_navWrapper__3enQr\",\"menu\":\"NavBar_menu__3dqFN\",\"spanMenu\":\"NavBar_spanMenu__7xDjk\",\"spanMenuFocus\":\"NavBar_spanMenuFocus__3lou6\",\"navList\":\"NavBar_navList__1ccpj\",\"navLink\":\"NavBar_navLink__oxSz6\",\"active\":\"NavBar_active__2_7ul\",\"showNav\":\"NavBar_showNav__pru72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};","import React, {useState} from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst [showMenu, setShowMenu] = useState(false)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetShowMenu(!showMenu)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.navWrapper}>\r\n\t\t\t<div onClick={onClickHandler} className={classes.menu}>\r\n\t\t\t\t{showMenu ? <span className={`${classes.spanMenu} ${classes.spanMenuFocus}`}>Hide Menu</span>  : <span className={classes.spanMenu}>Show menu</span> }\r\n\t\t\t</div>\r\n\t\t\t<ul className={showMenu ? `${classes.navList} ${classes.showNav}` : classes.navList}>\r\n\t\t\t\t<NavLink exact to={'/'} className={classes.navLink} activeClassName={classes.active}>Home</NavLink>\r\n\t\t\t\t<NavLink to={'/preJunior'} className={classes.navLink} activeClassName={classes.active}>preJunior</NavLink>\r\n\t\t\t\t<NavLink to={'/junior'} className={classes.navLink} activeClassName={classes.active}>Junior</NavLink>\r\n\t\t\t\t<NavLink to={'/juniorPlus'} className={classes.navLink} activeClassName={classes.active}>Junior+</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField?: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n}\r\n\r\nexport const Input = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = (props: PropsType) => {\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tconst type = 'text'\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t setValueInp={setValueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t setCorrectField={setCorrectField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n}\r\n\r\nconst Todo = (props: PropsType) => {\r\n\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<input onChange={onChangeStatusHandler} checked={t.isDone} type=\"checkbox\"/>{t.item}\r\n\t\t\t\t\t<button onClick={onClickDeleteHandler}>x</button>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value, props.id)\r\n\t\t\tsetValue('');\r\n\t\t\tsetActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value, props.id)\r\n\t\t\tsetValue('');\r\n\t\t\tsetActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\r\n\tlet [active, setActive] = useState(false);\r\n\tlet showAddBlock = () => setActive(!active);\r\n\tlet hideAddBlock = () => {\r\n\t\tsetActive(false);\r\n\t\tsetError(null)\r\n\r\n\t}\r\n\r\n\tconst showDisplay = {display: active ? 'block' : 'none'};\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>{props.title}\r\n\t\t\t\t<button className={classes.deleteTitle} onClick={removeTodoListHandler}>Delete ToDoList</button>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<button className={props.filterTask === 'all' ? classes.active : ''} onClick={showAllTasks}>All tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'active' ? classes.active : ''} onClick={showActiveTasks}>Active Tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'completed' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showCompletedTasks}>Completed Tasks</button>\r\n\t\t\t\t<button className={props.filterTask === 'height' ? classes.active : ''}\r\n\t\t\t\t\t\t\t\tonClick={showImportanceTasks}>Important</button>\r\n\t\t\t\t<button className={props.filterTask === 'medium' ? classes.active : ''} onClick={showMediumTasks}>Medium\r\n\t\t\t\t\timportance</button>\r\n\t\t\t\t<button className={props.filterTask === 'low' ? classes.active : ''} onClick={showLowTasks}>Low important</button>\r\n\t\t\t\t<button className={active ? classes.active : ''} onClick={showAddBlock}>Add Task</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.inputWrapper}>\r\n\t\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t\t<input className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}/>\r\n\t\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\t\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./PreJunior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {dialogsDataType, FilterTaskType, NamesData, TaskStateType, TasksType, TodoListType} from \"../../../App\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\nimport {Input} from \"../../../common/Input/Input\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {NamesNumber} from \"../../NamesNumber/NamesNumber\";\r\nimport {PresentationComponent} from \"../../PresentationComponent/PresentationComponent\";\r\nimport Todo from \"../../Todo/Todo\";\r\n\r\ntype PropsType = {\r\n\tdialogsData: Array<dialogsDataType>\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField?: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n\tonClickBtnHandler: () => void\r\n\tnamesData: Array<NamesData>\r\n\ttasks: TaskStateType\r\n\ttodoLists: Array<TodoListType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tremoveTodoList: (todoListId: string) => void\r\n}\r\n\r\nexport const PreJunior = (props: PropsType) => {\r\n\r\n\tlet todoList = props.todoLists.map(tl => {\r\n\r\n\t\tlet newFilteredTasks = props.tasks[tl.id]\r\n\t\tswitch (tl.filterTask) {\r\n\t\t\tcase 'active':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'completed':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'height':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'medium':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'low':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Todo key={tl.id}\r\n\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\ttasks={newFilteredTasks}\r\n\t\t\t\t\t\tchangeTasks={props.changeTasks}\r\n\t\t\t\t\t\taddNewTask={props.addNewTask}\r\n\t\t\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\t\t\tchangeStatus={props.changeStatus}\r\n\t\t\t\t\t\tfilterTask={tl.filterTask}\r\n\t\t\t\t\t\tremoveTodoList={props.removeTodoList}/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Dialogs dialogsData={props.dialogsData}/>\r\n\t\t\t<div className={'todoListWrapper'}>\r\n\t\t\t\t{todoList}\r\n\t\t\t</div>\r\n\t\t\t<div className={'inputWrapper'}>\r\n\t\t\t\t<Input valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t setValueInp={props.setValueInp}\r\n\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t setCorrectField={props.setCorrectField}\r\n\t\t\t\t\t\t\t onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\r\n\t\t\t\t<Button onClickBtnHandler={props.onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SAY HELLO'}\r\n\t\t\t\t\t\t\t\ttypeOfButton={'red'}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<NamesNumber namesData={props.namesData}/>\r\n\t\t\t<PresentationComponent/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\n\r\n\r\nexport const Junior = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\n\r\n\r\n\r\nexport const Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/Task5/UsersPages/PreJunior\";\nimport {Junior} from \"./components/Task5/UsersPages/Junior\";\nimport {JuniorPlus} from \"./components/Task5/UsersPages/JuniorPlus\";\nimport {Home} from \"./components/Task5/UsersPages/Home\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\nexport type TaskStateType = {\n[key:string]: Array<TasksType>\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = [\n\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t];\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState<TaskStateType>({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = (newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\n\t}\n\tlet changeTasks = (valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t};\n\tlet deleteTask = (idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}\n\tlet changeStatus = (idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\tlet removeTodoList = (todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = (value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t};\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t}\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\tlet onClickBtnHandler = () => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className={'pages'}>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Home/>}/>\n\t\t\t\t\t\t<Route path={'/preJunior'} render={() => <PreJunior dialogsData={dialogsData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValueInp={setValueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnamesData={namesData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttodoLists = {todoLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveTodoList={removeTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={deleteTask}/>\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path={'/junior'} render={() => <Junior/>}/>\n\t\t\t\t\t\t<Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}