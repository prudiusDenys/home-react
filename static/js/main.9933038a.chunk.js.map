{"version":3,"sources":["components/Task5/NavBar.module.css","components/Todo/Todo.module.css","components/Dialogs/Message/Message.module.css","common/Select/Select.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Checkbox/Checkbox.module.css","components/Dialogs/Avatar/Avatar.module.css","components/PresentationComponent/PresentationComponent.module.css","components/Todo/AddItemForm/AddItemForm.module.css","components/Task6/PresCompForEditableSpan.module.css","common/EditableSpan/EditableSpan.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Avatar/avatar.jpg","components/NamesNumber/NamesNumber.module.css","common/Radio/Radio.module.css","components/Task5/NavBar.tsx","components/Dialogs/Avatar/Avatar.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","common/Input/Input.tsx","common/Button/Button.tsx","components/NamesNumber/NamesNumber.tsx","common/Checkbox/Checkbox.tsx","components/PresentationComponent/PresentationComponent.tsx","components/Todo/AddTaskInput/AddTaskInput.tsx","components/Todo/EditableSpan/EditableSpan.tsx","components/Todo/Todo.tsx","components/Todo/AddItemForm/AddItemForm.tsx","components/Task5/UsersPages/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","components/Task6/PresCompForEditableSpan.tsx","LocalStorageFunctions/LocalStorageFunctions.ts","common/Select/Select.tsx","common/Radio/Radio.tsx","components/Task5/UsersPages/Junior.tsx","components/Task5/UsersPages/JuniorPlus.tsx","components/Task5/UsersPages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","useState","showMenu","setShowMenu","className","classes","navWrapper","onClick","menu","spanMenu","spanMenuFocus","navList","showNav","exact","to","navLink","activeClassName","active","Avatar","avatar","img","src","alt","Message","props","messageWrapper","message","name","text","time","Dialogs","dialogs","dialogsData","Input","wrapper","correctField","input","error","onChange","onChangeHandler","onKeyPress","onKeyPressHandler","onBlur","onBlurHandler","value","valueInp","placeholder","placeholderDefault","autoFocus","type","Button","typeOfButton","btn","cngBtn","onClickBtnHandler","title","NamesNumber","names","namesData","length","Checkbox","box","onClickCheckbox","checkbox","check","PresentationComponent","setValueInp","setCorrectField","setCheckbox","setBlurFocus","e","currentTarget","charCode","trim","alert","AddTaskInput","setValue","setError","showDisplay","display","inputWrapper","style","addNewTask","setActive","TaskAdd","close","EditableSpan","editMode","setEditMode","inputValue","setInputValue","correctValue","setCorrectValue","TextField","getNewInputValue","helperText","label","onDoubleClick","itemValue","Todo","elementItem","tasks","map","t","key","id","isDone","item","completedTask","changeStatus","checked","color","changeItemTask","IconButton","deleteTask","aria-label","Delete","todo","titleValue","changeTodoListTitle","removeTodoList","listItem","btns","btnsBases","variant","filterTask","changeTasks","btnsImportance","width","AddItemForm","Paper","itemForm","addItem","PlaylistAdd","PreJunior","todoList","todoLists","tl","newFilteredTasks","filter","importance","Grid","container","addNewTodoList","addTodoList","spacing","editSpanWrapper","span","onClickHandler","PresCompForEditableSpan","btnHandler","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Select","collapsed","setCollapsed","hoveredElement","setHoveredElement","selectedItem","items","find","i","hoveredItem","useEffect","country","c","onMouseDown","onMouseEnter","tabIndex","onKeyDown","console","log","keyCode","pretendentElement","Radio","radioWrapper","onChangeRadio","Junior","countries","contactMethods","setContactMethods","selectValue","copyContactMethods","r","contactMethod","JuniorPlus","Home","App","reference1","v1","reference2","setTodoLists","setTasks","newTaskValue","todoListId","valueNewFilter","idValue","td","task","TaskValue","filterTodoLists","setNamesData","showMessage","newName","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9933038a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"NavBar_navWrapper__3enQr\",\"menu\":\"NavBar_menu__3dqFN\",\"spanMenu\":\"NavBar_spanMenu__7xDjk\",\"spanMenuFocus\":\"NavBar_spanMenuFocus__3lou6\",\"navList\":\"NavBar_navList__1ccpj\",\"navLink\":\"NavBar_navLink__oxSz6\",\"active\":\"NavBar_active__2_7ul\",\"showNav\":\"NavBar_showNav__pru72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2uk5O\",\"listItem\":\"Todo_listItem__1cN6X\",\"item\":\"Todo_item__3cv0J\",\"btns\":\"Todo_btns__aQDWB\",\"active\":\"Todo_active__pgXdH\",\"completedTask\":\"Todo_completedTask__3fG4K\",\"error\":\"Todo_error__11Mtb\",\"errorText\":\"Todo_errorText__1OwFk\",\"inputWrapper\":\"Todo_inputWrapper__uDFwM\",\"input\":\"Todo_input__PTueI\",\"close\":\"Todo_close__1Qm_w\",\"deleteTitle\":\"Todo_deleteTitle__KymjH\",\"btnsBases\":\"Todo_btnsBases__11cr1\",\"btnsImportance\":\"Todo_btnsImportance__17grW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__bb0z_\",\"message\":\"Message_message__g8_f7\",\"name\":\"Message_name__3DkHS\",\"text\":\"Message_text__1nvIC\",\"time\":\"Message_time__rySdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Select_wrapper__29yGt\",\"country\":\"Select_country__3W9kg\",\"active\":\"Select_active__ipBg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HXeZT\",\"error\":\"Input_error__3GAiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38JIE\",\"cngBtn\":\"Button_cngBtn__xwT2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Checkbox_box__NIDiB\",\"check\":\"Checkbox_check__IfpJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__3R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresentationComponent_wrapper__29Ftr\",\"title\":\"PresentationComponent_title__2JLgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddItemForm_wrapper__4TCPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PresCompForEditableSpan_wrapper__jEPJZ\",\"btnHandler\":\"PresCompForEditableSpan_btnHandler__2Jlc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editSpanWrapper\":\"EditableSpan_editSpanWrapper__30Jru\",\"span\":\"EditableSpan_span__2BwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S_1bf\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.d42bbc31.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"NamesNumber_names__3MFFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioWrapper\":\"Radio_radioWrapper__gIvG_\"};","import React, {useState} from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n\tconst [showMenu, setShowMenu] = useState(false)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetShowMenu(!showMenu)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.navWrapper}>\r\n\t\t\t<div onClick={onClickHandler} className={classes.menu}>\r\n\t\t\t\t{showMenu ? <span className={`${classes.spanMenu} ${classes.spanMenuFocus}`}>Hide Menu</span>  : <span className={classes.spanMenu}>Show menu</span> }\r\n\t\t\t</div>\r\n\t\t\t<ul className={showMenu ? `${classes.navList} ${classes.showNav}` : classes.navList}>\r\n\t\t\t\t<NavLink exact to={'/'} className={classes.navLink} activeClassName={classes.active}>Home</NavLink>\r\n\t\t\t\t<NavLink to={'/preJunior'} className={classes.navLink} activeClassName={classes.active}>preJunior</NavLink>\r\n\t\t\t\t<NavLink to={'/junior'} className={classes.navLink} activeClassName={classes.active}>Junior</NavLink>\r\n\t\t\t\t<NavLink to={'/juniorPlus'} className={classes.navLink} activeClassName={classes.active}>Junior+</NavLink>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\n\r\nconst Avatar = () => {\r\n\treturn (\r\n\t\t<div className={classes.avatar}>\r\n\t\t\t<div className={classes.img}>\r\n\t\t\t\t<img src={avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport classes from './Message.module.css'\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\n\r\ntype propsType = {\r\n\tname: string,\r\n\ttext: string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrapper}>\r\n\t\t\t<Avatar/>\r\n\t\t\t<div className={classes.message}>\r\n\t\t\t\t<div className={classes.name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.text}>\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.time}>\r\n\t\t\t\t\t20:00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType} from \"../../App\";\r\n\r\ntype propsType = {\r\n\tdialogsData: Array<dialogsDataType>,\r\n}\r\n\r\nconst Dialogs = (props: propsType) => {\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<Message name = {props.dialogsData[0].name}  text = {props.dialogsData[0].text}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React, {ChangeEvent, FocusEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tvalueInp: string\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tplaceholderDefault?: string\r\n\tonBlurHandler?: ()=>void\r\n\tautoFocus?:boolean\r\n}\r\n\r\nexport const Input = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<input className={props.correctField ? classes.input : `${classes.input} ${classes.error}`}\r\n\t\t\t\t\t\t onChange={props.onChangeHandler}\r\n\t\t\t\t\t\t onKeyPress={props.onKeyPressHandler}\r\n\t\t\t\t\t\t onBlur={props.onBlurHandler}\r\n\t\t\t\t\t\t value={props.valueInp}\r\n\t\t\t\t\t\t placeholder={!props.correctField ? 'This field must be filled' : props.placeholderDefault}\r\n\t\t\t\t\t\t autoFocus={props.autoFocus}\r\n\t\t\t\t\t\t type='text'/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n\tonClickBtnHandler: () => void\r\n\ttitle: string\r\n\ttypeOfButton?: 'red'\r\n}\r\n\r\nexport const Button = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<button className={props.typeOfButton === 'red' ? `${classes.btn} ${classes.cngBtn}` : classes.btn}\r\n\t\t\t\t\t\t\tonClick={props.onClickBtnHandler}>{props.title}</button>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport classes from \"./NamesNumber.module.css\";\r\nimport {NamesData} from \"../../App\";\r\n\r\ntype PropsType = {\r\n\tnamesData: Array<NamesData>\r\n}\r\n\r\nexport const NamesNumber = (props: PropsType) => {\r\n\treturn(\r\n\t\t<div className={classes.names}>\r\n\t\t\tNumber of names = {props.namesData.length}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\ntype PropsType = {\r\n\tcheckbox: boolean\r\n\tonClickCheckbox: ()=>void\r\n}\r\n\r\nexport const Checkbox = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.box} onClick={props.onClickCheckbox}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.checkbox) && <div>\r\n            <span className={classes.check}></span>\r\n            <span className={classes.check}></span>\r\n          </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, KeyboardEvent, ChangeEvent,FocusEvent} from \"react\";\r\nimport classes from \"./PresentationComponent.module.css\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\n\r\n\r\nexport const PresentationComponent = () => {\r\n\r\n\tconst type = 'text'\r\n\tlet [valueInp, setValueInp] = useState('')\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\tlet [checkbox, setCheckbox] = useState(false)\r\n\tlet [blurFocus, setBlurFocus] = useState(false)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\talert('I work')\r\n\t\t\tsetValueInp('')\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onClickBtnHandler = () => {\r\n\t\talert('I pressed')\r\n\t}\r\n\tlet onClickCheckbox = () => {\r\n\t\tsetCheckbox(!checkbox)\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetBlurFocus(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\tTASK 4\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Checkbox checkbox={checkbox}\r\n\t\t\t\t\t\t\t\t\tonClickCheckbox={onClickCheckbox}/>\r\n\t\t\t\t<Input valueInp={valueInp}\r\n\t\t\t\t\t\t\t correctField={correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={onKeyPressHandler}\r\n\t\t\t\t\t\t\t onBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={''}/>\r\n\t\t\t\t<Button onClickBtnHandler={onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SEND'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"../Todo.module.css\";\r\n\r\ntype PropsType = {\r\n\taddNewTask: (inputValue: string)=>void\r\n\tactive: boolean\r\n\tsetActive: (boolean: boolean)=>void\r\n}\r\n\r\nexport const AddTaskInput = (props: PropsType) => {\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\tconst showDisplay = {display: props.active ? 'block' : 'none'};\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addNewTask(value)\r\n\t\t\tsetValue('');\r\n\t\t\tprops.setActive(false)\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\tlet hideAddBlock = () => {\r\n\t\tprops.setActive(false);\r\n\t\tsetError(null)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className={classes.inputWrapper}>\r\n\t\t\t<div className={classes.input} style={showDisplay}>\r\n\t\t\t\t<h3>Add New Task</h3>\r\n\t\t\t\t<input  className={error ? classes.error : ''} placeholder={error ? error : ''} type=\"text\"\r\n\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}/>\r\n\r\n\t\t\t\t<button onClick={addTaskHandler} className={classes.TaskAdd}>+</button>\r\n\r\n\t\t\t\t<h3 className={classes.close} onClick={hideAddBlock}>close</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n\titemValue: string\r\n\tgetNewInputValue: (inputValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = (props: PropsType) => {\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [correctValue, setCorrectValue] = useState(true);\r\n\r\n\tconst onDoubleClickHandler = () => {\r\n\t\tsetEditMode(true);\r\n\t\tsetInputValue(props.itemValue)\r\n\t}\r\n\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.currentTarget.value)\r\n\t\tsetCorrectValue(true)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tif (inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && inputValue.trim() !== '') {\r\n\t\t\tsetEditMode(false)\r\n\t\t\tprops.getNewInputValue(inputValue)\r\n\t\t} else {\r\n\t\t\tsetCorrectValue(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst error = {\r\n\t\tbackgroundColor: 'red',\r\n\t}\r\n\r\n\treturn (\r\n\t\teditMode ? <TextField error={!correctValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={correctValue ? '' : 'Task name is missing'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={'edit task'}/>\r\n\t\t\t: <span onDoubleClick={onDoubleClickHandler}>{props.itemValue}</span>\r\n\t)\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from \"./Todo.module.css\";\r\nimport {FilterTaskType, TasksType} from \"../../App\";\r\nimport {AddTaskInput} from \"./AddTaskInput/AddTaskInput\";\r\nimport {EditableSpan} from \"./EditableSpan/EditableSpan\";\r\nimport {Button, Checkbox} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\tid: string\r\n\ttitle: string\r\n\ttasks: Array<TasksType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tfilterTask: string\r\n\tremoveTodoList: (todoListId: string) => void\r\n\tchangeItemTask: (idValue: string, taskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string,) => void\r\n}\r\n\r\nconst Todo = (props: PropsType) => {\r\n\r\n\tconst [active, setActive] = useState(false);\r\n\tconst showAddBlock = () => setActive(!active);\r\n\r\n\tlet elementItem = props.tasks.map(t => {\r\n\t\t\tlet onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\tprops.changeStatus(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t}\r\n\t\t\tlet onClickDeleteHandler = () => {\r\n\t\t\t\tprops.deleteTask(t.id, props.id)\r\n\t\t\t}\r\n\t\t\tlet getNewInputValue = (inputValue: string) => {\r\n\t\t\t\tprops.changeItemTask(t.id, inputValue, props.id)\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li key={t.id} className={t.isDone ? `${classes.item} ${classes.completedTask}` : classes.item}>\r\n\t\t\t\t\t<Checkbox  onChange={onChangeStatusHandler} checked={t.isDone} color={\"primary\"}/>\r\n\t\t\t\t\t<EditableSpan itemValue={t.item} getNewInputValue={getNewInputValue}/>\r\n\t\t\t\t\t<IconButton onClick={onClickDeleteHandler} aria-label=\"delete\">\r\n\t\t\t\t\t\t<Delete />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\r\n\tlet showAllTasks = () => props.changeTasks('all', props.id);\r\n\tlet showActiveTasks = () => props.changeTasks('active', props.id);\r\n\tlet showCompletedTasks = () => props.changeTasks('completed', props.id);\r\n\tlet showImportanceTasks = () => props.changeTasks('height', props.id);\r\n\tlet showMediumTasks = () => props.changeTasks('medium', props.id);\r\n\tlet showLowTasks = () => props.changeTasks('low', props.id);\r\n\tlet removeTodoListHandler = () => {\r\n\t\tprops.removeTodoList(props.id)\r\n\t}\r\n\tlet addNewTask = (title: string) => {\r\n\t\tprops.addNewTask(title, props.id)\r\n\t}\r\n\tlet getNewTitleValue = (titleValue: string) => {\r\n\t\tprops.changeTodoListTitle(props.id, titleValue)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.todo}>\r\n\t\t\t<h2>\r\n\t\t\t\t<EditableSpan itemValue={props.title} getNewInputValue={getNewTitleValue}/>\r\n\t\t\t\t<IconButton onClick={removeTodoListHandler} aria-label=\"delete\">\r\n\t\t\t\t\t<Delete />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</h2>\r\n\t\t\t<ul className={classes.listItem}>\r\n\t\t\t\t{elementItem}\r\n\t\t\t</ul>\r\n\t\t\t<div className={classes.btns}>\r\n\t\t\t\t<div className={classes.btnsBases}>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'all' ? 'contained' : 'text'} color={\"primary\"} onClick={showAllTasks}>All</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'active' ? 'contained' : 'text'} color={'primary'} onClick={showActiveTasks}>Active</Button>\r\n\t\t\t\t\t<Button variant={props.filterTask === 'completed' ? 'contained' : 'text'} color={\"primary\"} onClick={showCompletedTasks}>Completed</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.btnsImportance}>\r\n\t\t\t\t\t\t<Button variant={props.filterTask === 'height' ? 'contained' : 'text'} color={\"primary\"} onClick={showImportanceTasks}>Important</Button>\r\n\t\t\t\t\t\t<Button variant={props.filterTask === 'medium' ? 'contained' : 'text'} color={\"primary\"} onClick={showMediumTasks}>Medium</Button>\r\n\t\t\t\t\t\t<Button variant={props.filterTask === 'low' ? 'contained' : 'text'} color={\"primary\"} onClick={showLowTasks}>Low</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t<Button style={{width: '100%'}}  className={active ? classes.active : ''} color={\"secondary\"} onClick={showAddBlock}>Add Task</Button>\r\n\t\t\t</div>\r\n\t\t\t<AddTaskInput addNewTask={addNewTask}\r\n\t\t\t\t\t\t\t\t\t\tactive={active}\r\n\t\t\t\t\t\t\t\t\t\tsetActive={setActive}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./AddItemForm.module.css\";\r\nimport {Paper, TextField} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {PlaylistAdd} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n\taddItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = (props: PropsType) => {\r\n\tlet [value, setValue] = useState('')\r\n\tlet [error, setError] = useState<string | null>(null);\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value)\r\n\t\tsetError(null)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t}\r\n\tlet addTaskHandler = () => {\r\n\t\tif (value.trim() !== '') {\r\n\t\t\tprops.addItem(value)\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError('you didn\\'t enter eny character')\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t<div className={classes.itemForm}>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<TextField error={!!error}\r\n\t\t\t\t\t\t\t\t\t value={value}\r\n\t\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t onKeyPress={onKeyPressHandler}\r\n\t\t\t\t\t\t\t\t\t label={'Add new TodoList'}\r\n\t\t\t\t\t\t\t\t\t helperText={!!error ? \"Incorrect entry.\" : ''}/>\r\n\t\t\t\t<IconButton onClick={addTaskHandler} color={\"primary\"}>\r\n\t\t\t\t\t<PlaylistAdd/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</Paper>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./PreJunior.module.css\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {dialogsDataType, FilterTaskType, NamesData, TaskStateType, TodoListType} from \"../../../App\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\nimport {Input} from \"../../../common/Input/Input\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {NamesNumber} from \"../../NamesNumber/NamesNumber\";\r\nimport {PresentationComponent} from \"../../PresentationComponent/PresentationComponent\";\r\nimport Todo from \"../../Todo/Todo\";\r\nimport {AddItemForm} from \"../../Todo/AddItemForm/AddItemForm\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n\tdialogsData: Array<dialogsDataType>\r\n\tvalueInp: string\r\n\tsetValueInp: (value: string) => void\r\n\tcorrectField: boolean\r\n\tsetCorrectField: (correctField: boolean) => void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n\tplaceholderDefault?: string\r\n\tonClickBtnHandler: () => void\r\n\tnamesData: Array<NamesData>\r\n\ttasks: TaskStateType\r\n\ttodoLists: Array<TodoListType>\r\n\tchangeTasks: (value: FilterTaskType, todoListId: string) => void;\r\n\taddNewTask: (value: string, todoListId: string) => void;\r\n\tdeleteTask: (idValue: string, todoListId: string) => void;\r\n\tchangeStatus: (idValue: string, isDone: boolean, todoListId: string) => void\r\n\tremoveTodoList: (todoListId: string) => void\r\n\taddTodoList: (title: string) => void\r\n\tchangeItemTask: (idValue: string, TaskValue: string, todoListId: string) => void\r\n\tchangeTodoListTitle: (todoListId: string, titleValue: string) => void\r\n\r\n}\r\n\r\nexport const PreJunior = (props: PropsType) => {\r\n\r\n\tlet todoList = props.todoLists.map(tl => {\r\n\r\n\t\tlet newFilteredTasks = props.tasks[tl.id]\r\n\t\tswitch (tl.filterTask) {\r\n\t\t\tcase 'active':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => !t.isDone)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'completed':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter(t => t.isDone);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'height':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'height'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'medium':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'medium'))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'low':\r\n\t\t\t\tnewFilteredTasks = newFilteredTasks.filter((t => t.importance === 'low'))\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<Todo key={tl.id}\r\n\t\t\t\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\t\t\t\ttasks={newFilteredTasks}\r\n\t\t\t\t\t\t\t\t\tchangeTasks={props.changeTasks}\r\n\t\t\t\t\t\t\t\t\taddNewTask={props.addNewTask}\r\n\t\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\r\n\t\t\t\t\t\t\t\t\tchangeStatus={props.changeStatus}\r\n\t\t\t\t\t\t\t\t\tfilterTask={tl.filterTask}\r\n\t\t\t\t\t\t\t\t\tremoveTodoList={props.removeTodoList}\r\n\t\t\t\t\t\t\t\t\tchangeItemTask={props.changeItemTask} changeTodoListTitle={props.changeTodoListTitle}/>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\r\n\t\t)\r\n\t})\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Dialogs dialogsData={props.dialogsData}/>\r\n\r\n\t\t\t<div className={'todoListWrapper'}>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<div className={classes.addNewTodoList}>\r\n\t\t\t\t\t\t<AddItemForm addItem={props.addTodoList}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t{todoList}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<div className={'inputWrapper'}>\r\n\t\t\t\t<Input valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}\r\n\t\t\t\t\t\t\t placeholderDefault={'Write your name'}/>\r\n\t\t\t\t<Button onClickBtnHandler={props.onClickBtnHandler}\r\n\t\t\t\t\t\t\t\ttitle={'SAY HELLO'}\r\n\t\t\t\t\t\t\t\ttypeOfButton={'red'}/>\r\n\t\t\t</div>\r\n\t\t\t<NamesNumber namesData={props.namesData}/>\r\n\t\t\t<PresentationComponent/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport classes from \"./EditableSpan.module.css\";\r\nimport {Input} from \"../Input/Input\";\r\n\r\n\r\ntype PropsType = {\r\n\teditMode: boolean\r\n\tvalueInp: string\r\n\tonBlurHandler: ()=>void\r\n\tonClickHandler:()=>void\r\n\tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n\tcorrectField: boolean\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>)=>void\r\n}\r\n\r\nexport const EditableSpan = (props: PropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.editSpanWrapper}>\r\n\t\t\t{\r\n\t\t\t\tprops.editMode ?\r\n\t\t\t\t\t<Input onChangeHandler={props.onChangeHandler}\r\n\t\t\t\t\t\t\t\t valueInp={props.valueInp}\r\n\t\t\t\t\t\t\t\t onBlurHandler={props.onBlurHandler}\r\n\t\t\t\t\t\t\t\t autoFocus={true}\r\n\t\t\t\t\t\t\t\t correctField={props.correctField}\r\n\t\t\t\t\t\t\t\t placeholderDefault={'Write your status'}\r\n\t\t\t\t\t\t\t\t onKeyPressHandler={props.onKeyPressHandler}/> :\r\n\t\t\t\t\t<span className={classes.span}\r\n\t\t\t\t\t\t\t\tonClick={props.onClickHandler}>{props.valueInp !== '' ? props.valueInp : \"You don't have any status\"}</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./PresCompForEditableSpan.module.css\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {restoreState, saveState} from \"../../LocalStorageFunctions/LocalStorageFunctions\";\r\n\r\n\r\nexport const PresCompForEditableSpan = () => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [valueInp, setValueInp] = useState('');\r\n\tlet [correctField, setCorrectField] = useState(true)\r\n\r\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValueInp(e.currentTarget.value)\r\n\t\tsetCorrectField(true)\r\n\t}\r\n\tlet onClickHandler = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13 && valueInp.trim() !== '') {\r\n\t\t\tsetValueInp(valueInp)\r\n\t\t\tsetEditMode(false)\r\n\t\t} else if (e.charCode === 13 && valueInp.trim() === '') {\r\n\t\t\tsetCorrectField(false)\r\n\t\t\tsetValueInp('')\r\n\t\t}\r\n\t}\r\n\tlet onBlurHandler = () => {\r\n\t\tsetEditMode(false)\r\n\t}\r\n\tlet saveStateFunction = () => {\r\n\t\tsaveState('data', valueInp);\r\n\t}\r\n\tlet restoreStateFunction = () => {\r\n\t\tsetValueInp(restoreState('data', ''));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<EditableSpan editMode={editMode}\r\n\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\r\n\t\t\t\t\t\t\t\t\t\tonBlurHandler={onBlurHandler}\r\n\t\t\t\t\t\t\t\t\t\tonClickHandler={onClickHandler}\r\n\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\r\n\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}/>\r\n\t\t\t<div className={classes.btnHandler}>\r\n\t\t\t\t<Button onClickBtnHandler={saveStateFunction} title={'Save state'}/>\r\n\t\t\t\t<Button onClickBtnHandler={restoreStateFunction} title={'Restore state'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","export function saveState<T>(key: string, state: T) {\r\n\tconst stateAsString = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\tconst stateAsString = localStorage.getItem(key);\r\n\tif (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n\treturn defaultState;\r\n}","import React, {useState, KeyboardEvent, useEffect} from \"react\";\r\nimport classes from \"./Select.module.css\";\r\nimport {CountriesType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\tvalue: string\r\n\titems: Array<CountriesType>\r\n\tonChange: (selectValue: string) => void\r\n}\r\n\r\nexport const Select = (props: PropsType) => {\r\n\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\tconst [hoveredElement, setHoveredElement] = useState(props.value);\r\n\r\n\tconst selectedItem = props.items.find(i => i.value === props.value)\r\n\tconst hoveredItem = props.items.find(i => i.value === hoveredElement)\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tsetCollapsed(!collapsed)\r\n\t}\r\n\tconst onBlurHandler = () => {\r\n\t\tsetCollapsed(true)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHoveredElement(props.value)\r\n\t}, [props.value]);\r\n\tconst onKeyDownHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n\t\tconsole.log(e.keyCode)\r\n\t\tif (e.keyCode === 40 || e.keyCode === 38) {\r\n\t\t\tfor (let i = 0; i < props.items.length; i++) {\r\n\t\t\t\tif (props.items[i].value === hoveredElement) {\r\n\t\t\t\t\tconst pretendentElement = e.keyCode === 40 ? props.items[i + 1] : props.items[i - 1];\r\n\t\t\t\t\tif (pretendentElement) {\r\n\t\t\t\t\t\tprops.onChange(pretendentElement.value);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!selectedItem) {\r\n\t\t\t\tprops.onChange(props.items[0].value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e.keyCode === 13 || e.keyCode === 27) {\r\n\t\t\tsetCollapsed(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst country = props.items.map(c => {\r\n\r\n\t\tconst onMouseDownHandler = () => {\r\n\t\t\tprops.onChange(c.value)\r\n\t\t}\r\n\t\tconst onMouseEnterHandler = () => {\r\n\t\t\tsetHoveredElement(c.value)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={(hoveredItem === c) ? `${classes.country} ${classes.active}` : classes.country}\r\n\t\t\t\t\t key={c.value}\r\n\t\t\t\t\t onMouseDown={onMouseDownHandler}\r\n\t\t\t\t\t onMouseEnter={onMouseEnterHandler}>{c.country}\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.wrapper} tabIndex={0} onKeyDown={onKeyDownHandler}>\r\n\t\t\t<h3 className={classes.active}\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\tonClick={onClickHandler}\r\n\t\t\t\t\tonBlur={onBlurHandler}>{selectedItem && selectedItem.country}</h3>\r\n\t\t\t{\r\n\t\t\t\t!collapsed &&\r\n        <div>\r\n\t\t\t\t\t{country}\r\n        </div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Radio.module.css\";\r\nimport {ContactMethodType} from \"../../components/Task5/UsersPages/Junior\";\r\n\r\ntype PropsType = {\r\n\titems: Array<ContactMethodType>\r\n\tonChangeRadio: (id: number, checked: boolean) => void\r\n}\r\n\r\nexport const Radio = (props: PropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.radioWrapper}>\r\n\t\t\t{props.items.map(i => {\r\n\r\n\t\t\t\tconst onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tprops.onChangeRadio(i.id, e.currentTarget.checked)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<input key={i.id}\r\n\t\t\t\t\t\t\t\t onChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t type=\"radio\"\r\n\t\t\t\t\t\t\t\t name={i.name}\r\n\t\t\t\t\t\t\t\t value={i.value}\r\n\t\t\t\t\t\t\t\t checked={i.checked}/>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState} from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport {PresCompForEditableSpan} from \"../../Task6/PresCompForEditableSpan\";\r\nimport {Select} from \"../../../common/Select/Select\";\r\nimport {Radio} from \"../../../common/Radio/Radio\";\r\n\r\nexport type CountriesType = {\r\n\tvalue: string\r\n\tcountry: string\r\n}\r\nexport type ContactMethodType = {\r\n\tid: number\r\n\tname: string\r\n\tvalue: string\r\n\tchecked: boolean\r\n}\r\n\r\nexport const Junior = () => {\r\n\r\n\tconst countries: Array<CountriesType> = [\r\n\t\t{value: '1', country: 'Belarus'},\r\n\t\t{value: '2', country: 'Russia'},\r\n\t\t{value: '3', country: 'Ukraine'},\r\n\t\t{value: '4', country: 'Italy'},\r\n\t]\r\n\r\n\tconst [value, setValue] = useState<string>(countries[0].value);\r\n\r\n\tconst onChange = (selectValue: string) => {\r\n\t\tsetValue(selectValue);\r\n\t}\r\n\r\n/////////////////// RADIO ///////////////////////////////\r\n\r\n\tconst [contactMethods, setContactMethods] = useState<Array<ContactMethodType>>([\r\n\t\t{id: 1, name: 'contact', value: 'Phone', checked: false},\r\n\t\t{id: 2, name: 'contact', value: 'Mobile phone', checked: false},\r\n\t\t{id: 3, name: 'contact', value: 'Email', checked: true},\r\n\t\t{id: 4, name: 'contact', value: 'Fax', checked: false},\r\n\t])\r\n\r\n\tconst onChangeRadio = (id: number, checked: boolean) => {\r\n\t\tconst copyContactMethods = contactMethods.map(r => {\r\n\t\t\tif (r.checked) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...r,\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t})\r\n\t\tconst contactMethod = copyContactMethods.find(r => r.id === id)\r\n\t\tif (contactMethod) {\r\n\t\t\tcontactMethod.checked = checked\r\n\t\t\tsetContactMethods([...copyContactMethods])\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t\t<PresCompForEditableSpan/>\r\n\t\t\t<Select value={value} items={countries} onChange={onChange}/>\r\n\t\t\t<Radio items={contactMethods} onChangeRadio={onChangeRadio}/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {NavBar} from \"../NavBar\";\r\nimport Dialogs from \"../../Dialogs/Dialogs\";\r\n\r\n\r\n\r\nexport const Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t<NavBar/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport './App.css';\nimport {v1} from \"uuid\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport {PreJunior} from \"./components/Task5/UsersPages/PreJunior\";\nimport {Junior} from \"./components/Task5/UsersPages/Junior\";\nimport {JuniorPlus} from \"./components/Task5/UsersPages/JuniorPlus\";\nimport {Home} from \"./components/Task5/UsersPages/Home\";\nimport {PresCompForEditableSpan} from \"./components/Task6/PresCompForEditableSpan\";\n\nexport type dialogsDataType = {\n\tid: number,\n\tname: string,\n\ttext: string\n}\nexport type TasksType = {\n\tid: string\n\titem: string\n\tisDone: boolean\n\timportance: string\n}\nexport type NamesData = {\n\tid?: string\n\tname?: string\n}\nexport type FilterTaskType = 'all' | 'active' | 'completed' | 'height' | 'medium' | 'low';\nexport type TodoListType = {\n\tid: string\n\ttitle: string\n\tfilterTask: FilterTaskType\n}\nexport type TaskStateType = {\n\t[key: string]: Array<TasksType>\n}\n\n\nfunction App() {\n\n\tconst dialogsData: Array<dialogsDataType> = [\n\t\t{id: 1, name: 'Denis', text: 'npm start нажимал ?'},\n\t\t{id: 2, name: 'Andrey', text: 'Да, нажал!'},\n\t\t{id: 3, name: 'Ivan', text: 'Что такое npm ?'}\n\t];\n\n\t// =============================== HOME WORK NUMBER 2 ====================================\n\n\tlet reference1 = v1();\n\tlet reference2 = v1();\n\n\tlet [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n\t\t{id: reference1, title: 'My first Todo list', filterTask: 'all'},\n\t\t{id: reference2, title: 'My second Todo list', filterTask: 'completed'}\n\t])\n\tlet [tasks, setTasks] = useState<TaskStateType>({\n\t\t[reference1]:\n\t\t\t[\n\t\t\t\t{id: v1(), item: 'React', isDone: false, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'Английский', isDone: true, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JS', isDone: true, importance: 'height'},\n\t\t\t\t{id: v1(), item: 'TypeScript', isDone: false, importance: 'medium'},\n\t\t\t\t{id: v1(), item: 'JestTests', isDone: false, importance: 'low'}\n\t\t\t],\n\t\t[reference2]: [\n\t\t\t{id: v1(), item: 'German', isDone: true, importance: 'height'},\n\t\t\t{id: v1(), item: 'English', isDone: true, importance: 'medium'},\n\t\t\t{id: v1(), item: 'Spain', isDone: false, importance: 'height'},\n\t\t\t{id: v1(), item: 'Chinese', isDone: false, importance: 'medium'},\n\t\t]\n\t})\n\n\tlet addNewTask = (newTaskValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = [{id: v1(), item: newTaskValue, isDone: false, importance: 'height'}, ...tasks[todoListId]]\n\t\tsetTasks({...tasks});\n\n\t}\n\tlet changeTasks = (valueNewFilter: FilterTaskType, todoListId: string) => {\n\t\tlet todoList = todoLists.find(tl => tl.id === todoListId);\n\t\tif (todoList) {\n\t\t\ttodoList.filterTask = valueNewFilter;\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t};\n\tlet deleteTask = (idValue: string, todoListId: string) => {\n\t\ttasks[todoListId] = tasks[todoListId].filter(t => t.id !== idValue)\n\t\tsetTasks({...tasks})\n\t}\n\n\tlet changeTodoListTitle = (todoListId: string, titleValue: string) => {\n\t\tlet todoList = todoLists.find(td => td.id === todoListId)\n\t\tif (todoList) {\n\t\t\ttodoList.title = titleValue\n\t\t\tsetTodoLists([...todoLists])\n\t\t}\n\t}\n\n\tlet changeStatus = (idValue: string, isDone: boolean, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.isDone = isDone;\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\n\tlet changeItemTask = (idValue: string, TaskValue: string, todoListId: string) => {\n\t\tlet todoList = tasks[todoListId]\n\t\tlet task = todoList.find(t => t.id === idValue)\n\t\tif (task) {\n\t\t\ttask.item = TaskValue\n\t\t\tsetTasks({...tasks})\n\t\t}\n\t}\n\n\tlet removeTodoList = (todoListId: string) => {\n\t\tlet filterTodoLists = todoLists.filter(tl => tl.id !== todoListId)\n\t\tsetTodoLists(filterTodoLists)\n\t\tdelete tasks[todoListId]\n\t\tsetTasks({...tasks})\n\t}\n\n\tconst addTodoList = (title: string) => {\n\t\tlet todoList: TodoListType = {id: v1(), title: title, filterTask: 'all'}\n\t\tsetTodoLists([todoList, ...todoLists])\n\t\tsetTasks({...tasks, [todoList.id]: []})\n\t}\n\n\t// =============================== HOME WORK NUMBER 3 and 4 ====================================\n\tconst type = 'text'\n\tlet [valueInp, setValueInp] = useState('')\n\tlet [correctField, setCorrectField] = useState(true)\n\tlet [namesData, setNamesData] = useState<Array<{ id: string, name: string }>>([])\n\n\tlet showMessage = (value: string) => {\n\t\talert(`Hello ${value}`);\n\t\tlet newName = [...namesData, {id: v1(), name: value}]\n\t\tsetNamesData(newName)\n\t};\n\tlet onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetValueInp(e.currentTarget.value)\n\t\tsetCorrectField(true)\n\t}\n\tlet onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.charCode === 13 && e.currentTarget.value.trim() !== '') {\n\t\t\tshowMessage(e.currentTarget.value.trim())\n\t\t\tsetValueInp('')\n\t\t} else if (e.charCode === 13 && e.currentTarget.value.trim() === '') {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\tlet onClickBtnHandler = () => {\n\t\tif (valueInp.trim() !== '') {\n\t\t\tshowMessage(valueInp.trim())\n\t\t\tsetValueInp('')\n\t\t} else {\n\t\t\tsetCorrectField(false)\n\t\t\tsetValueInp('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className={'pages'}>\n\t\t\t\t\t\t<Route exact path={'/'} render={() => <Home/>}/>\n\t\t\t\t\t\t<Route path={'/preJunior'} render={() => <PreJunior dialogsData={dialogsData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClickBtnHandler={onClickBtnHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCorrectField={setCorrectField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValueInp={setValueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueInp={valueInp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorrectField={correctField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnamesData={namesData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttodoLists={todoLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveTodoList={removeTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddNewTask={addNewTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeStatus={changeStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTasks={changeTasks}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddTodoList={addTodoList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeItemTask={changeItemTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeTodoListTitle={changeTodoListTitle}/>\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path={'/junior'} render={() => <Junior/>}/>\n\t\t\t\t\t\t<Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}